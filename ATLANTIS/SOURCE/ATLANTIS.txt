1 RANDOMIZE :: CALL MAGNIFY(3) :: CALL CLEAR

! S IS THE S ARRAY, L IS LANES ARRAY, B IS BULLETS ARRAY
! S    1      2     3     4       5     6   7    8      9      10       11
!    STATUS CHAR   DIR   LANE   FRAME   X   Y  TARGET TXLEFT TXRIGHT BEAM COUNT
!SHIP STATUS VALUES
!     0      1     2    3    4    5    6    7    8    9     10
! INACTIVE ACTIVE HIT1 HIT2 HIT3 HIT4 HIT5 HIT6 HIT7 HIT8 TARGET 
10 DIM S(5,11) :: DIM A(11,2) :: DIM B(2) :: DIM L(6)
20 GOSUB 17000 :: RESTORE 17001
30 READ A$ :: IF A$="" THEN 40 :: CALL LINK("CWRITE",A$) :: GOTO 30
40 GOSUB 9500 :: CALL LINK("SCRN2") :: GOTO 8000
! ASSET   1      2   
!       STATUS CHAR
! BULLET  1
!       STATUS

!SETS UP A NEWLY LAUNCHED SHIP BASED ON THE RANDOM NUMBER PASSED IN
! N = RANDOM NUMBER
! D = DIRECTION OF THE SHIP, BASED ON N
! C = CHARACTER PATTERN FOR SHIP
! J = LEVEL
! SUB SC(N,D,C,V,J)
! CALL SC(R,S(SH,3),S(SH,2),S(SH,9),W)
140 CALL LINK("IRND",2,R,2+W,R2) :: R2=R2+1 :: IF R2>10 THEN 198
150 ON R2 GOTO 160,170,190,170,180,170,190,160,180,180
160 IF R>0 THEN S(SH,2)=32 :: S(SH,3)=-15-W ELSE S(SH,2)=40 :: S(SH,3)=15+W
165 S(SH,9)=10 :: RETURN
170 IF R>0 THEN S(SH,2)=48 :: S(SH,3)=-19-W ELSE S(SH,2)=56 :: S(SH,3)=19+W
175 S(SH,9)=20 :: RETURN
180 IF R>0 THEN S(SH,2)=64 :: S(SH,3)=-28-W ELSE S(SH,2)=72 :: S(SH,3)=28+W
185 S(SH,9)=50 :: RETURN
190 IF R>0 THEN S(SH,2)=32 :: S(SH,3)=-21-W ELSE S(SH,2)=40 :: S(SH,3)=21+W
195 S(SH,9)=10 :: RETURN
198 S(SH,9)=50 :: IF R>0 THEN S(SH,2)=64 :: S(SH,3)=-32-W ELSE S(SH,2)=72 :: S(SH,3)=32+W
199 RETURN

REM CHARACTER DATA
5200 DATA 128,"021404073F7FFFFFB7FFFFF7F7FFFFFF402828E8FCFEFFFF0406363636363636"
5210 DATA 132,"0304081020479F9F000000003F3FFFFFC020100804E2F9F9000000000000B5FF"
5220 DATA 136,"040A0A1121C0FFFF205050888403FFFF0000000000014EFF00000000004167FF"
5230 DATA 140,"0000000000504DFF000000000021B5FF00000000000000000"
5240 DATA 144,"060E1F3B7BDFCFFF6070F8DCDEFBF3FF010302060203030280C0406040C0C04"
5250 DATA 148,"E6FDFFDEDEFBF3FF67BFFF7B7BDFCFFF00000000000446FF00000000000819BF"
5260 DATA 152,"00004000000000000000000200000000000000000000080020001"
5270 DATA 156,"0000000010000000000000000000000000000000000000000"
5280 DATA 160,"00004000000000000000000200000000000000000000080020001"
5290 DATA 164,"0000000010000000000000000000000000000000000000000"
5300 DATA 168,"4070787C7C684440C0F8B6ABABB6F8C0C0F896CBAB96F8C0E0FCBAD595DABCE"
5310 DATA 172,"E0FCAAA585EAFCE0E0FC9AB595DA9CE0E0FCDAB595AADCE0E0FC8AE5D5BABCE"
5320 DATA 176,"E0FCDAA5D5AADCE0E0FCDAA5C5EADCE0E0FC869FE7B6CCF00"
5330 DATA 180,"0000000000000000000000000000000000000000000000000"
5340 DATA 184,"00183C183C183C7E003C183C183C187EFFFFFFFFFFFFFFFFFFFF"
5350 DATA 188,"0000000000106AFF000000000000000000000000000000000"
5360 DATA 192,"FFFFFFFFFFFFFFFFFF00FFFFFFFFFFFF00000000000000000"
5370 DATA 196,"0000000000000000000000000000000000000000000000000"
5380 DATA 200,"000000000000C3FF0000000000003CFFFFFFFFFFFFFFFFFF0"
5390 DATA 204,"0000000000000000000000000000000000000000000000000"
5400 DATA 208,"FFFFFFFFFFFFFFFF0",-1
REM PLAYFIELD DATA
6000 DATA 16,1,192,256,14,16,208,2,14,31,208,2,15,1,208,2
6010 DATA 15,15,208,4,15,31,208,1,15,16,192,2,15,32,192,1
6020 DATA 16,1,192,32,16,3,194,11,16,19,194,12,16,14,184,1
6030 DATA 16,16,192,2,16,32,192,1,17,1,192,1,17,2,192,1,17,3,194,11
6040 DATA 17,14,192,2,17,16,192,2,17,18,192,1,17,19,194,12,17,31,192,1
6050 DATA 17,32,192,1,18,1,192,1,18,2,192,1,18,3,194,11,18,9,132,1
6060 DATA 18,10,133,2,18,12,134,1,18,14,192,1,18,15,192,3,18,18,192,1
!6070 DATA 18,19,185,1,18,20,194,11,18,31,192,1,18,32,192,1,19,1,192,1
6070 DATA 18,20,194,11,18,31,192,1,18,32,192,1,19,1,192,1
6080 DATA 19,2,192,2,19,4,194,5,19,9,192,4,19,13,194,1,19,14,192,1
6090 DATA 19,15,192,3,19,18,192,2,19,20,136,4,19,21,137,1,19,23,137,1
6100 DATA 19,24,194,1,19,25,192,4,19,29,194,1,19,30,192,2,19,32,192,1
6110 DATA 20,1,192,2,20,3,192,2,20,5,194,3,20,8,192,2,20,10,192,2,20,12,192,3
6120 DATA 20,15,192,4,20,19,192,1,20,20,187,4,20,24,192,2,20,26,192,2
6130 DATA 20,28,192,3,20,31,192,2,21,1,192,3,21,4,192,1,21,5,128,1,21,6,129,1
6140 DATA 21,7,130,1,20,6,131,1,21,8,192,1,21,9,192,24,21,19,192,6,22,1,192,96
6150 DATA 22,4,192,5,22,5,193,3,18,25,192,4,19,26,192,2,-1,0,0,0
REM SPRITE DATA
!SHIP 1A LEFT
6200 DATA 32,"000000387CFE8F458F7C3800000000000000001F7E06FF55FF067E1F"
!SHIP 1B LEFT
6210 DATA 36,"000000387CFE8F2A8F7C3800000000000000001F7E06FFAAFF067E1F"
!SHIP 1A RIGHT
6220 DATA 40,"000000F87E60FFAAFF607EF8000000000000001C3E7FF1A2F13E1C"
!SHIP 1B RIGHT
6230 DATA 44,"000000F87E60FF55FF607EF8000000000000001C3E7FF154F13E1C"
!SHIP 2A LEFT
6240 DATA 48,"000000000000033FEA3F03000000000000000000203CFEFFAAFFFC78FC"
!SHIP 2B LEFT
6250 DATA 52,"000000000000033FD53F03000000000000000000043CFEFF55FFFC78FC"
!SHIP 2A RIGHT
6260 DATA 56,"00000000043C7FFF55FF3F1E3F000000000000000000C0FC57FCC"
!SHIP 2B RIGHT
6270 DATA 60,"00000000203C7FFFAAFF3F1E3F000000000000000000C0FCABFCC"
!SHIP 3A LEFT
6280 DATA 64,"0000000000000003382F38130000000000000000000000F068F0E0F"
!SHIP 3B LEFT
6290 DATA 68,"0000000000000013382F38030000000000000000000000F060F0E8F"
!SHIP 3A RIGHT
6300 DATA 72,"000000000000000F160F070F0000000000000000000000C01CF41CC8"
!SHIP 3B RIGHT
6310 DATA 76,"000000000000000F060F170F0000000000000000000000C81CF41CC"
!EXPLOSION 1
6320 DATA 80,"0000000000080F0107070200000000000000000000C070F0F8F0D8"
!EXPLOSION 2
6330 DATA 84,"0000000011001B01130B00050000000000000000200860F074F0002C"
!EXPLOSION 3
6340 DATA 88,"0000002200056005210114001200000000000012005008C06AA0480016"
!EXPLOSION 4
6350 DATA 92,"000044000A00CA004100220800240000000009004800448055801044001003"
!CENTER GUN A
6360 DATA 96,010001010105000101010100040400308000808080A000808080800020200404"
!CENTER GUN B
6370 DATA 100,000001010101040001010101040420200000808080802000808080802020000C"
!LEFT GUN A
6380 DATA 104,"0000000000000100010010000202000000022C14A854A0D04"
!LEFT GUN B
6390 DATA 108,"0000000000020100010000100006000000000C542850A8C0402"
!RIGHT GUN A
6400 DATA 112,"00403428152A050B0200000000000000000000000000800080000800404"
!RIGHT GUN B
6410 DATA 116,"0000302A140A15030204000000000000000000000040800080000008006"
!BULLET
6420 DATA 120,"E0E0E00000000000000000000000000000000000000000000"
!GEN
6430 DATA 124,"3C42818181818181000000000000000000000000000000000"
!CITY 1
6440 DATA 128,"04040404040404C4A0B0BE007F00FF0080808080848484800E0CBF80FC00FE"
!CITY 2
6450 DATA 132,"00000000000F30C0000C0C0CC4C4FF010000000000F00C03000080E08898FE8"
!CITY 3
6460 DATA 136,"00202070612121333175F5EEDE3F4E3080809091959597D393AFAF777BFC6D92"
!BEAM
6470 DATA 140,"03030303030303030303030303030303C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C"
6480 DATA -1,""
REM LEVEL DISPLAY, START
7000 CALL LOAD(-1,2) :: CALL LINK("DISPLY",6,14,"ready!") :: CALL LINK("PLAY",STRT) :: E=60 :: FL=1 :: GOSUB 13300 :: CALL LINK("DISPLY",6,14,"      ") :: RETURN
!DRAW SCREEN
8000 CALL SCREEN(2) :: C=2 :: GOSUB 20000 :: RESTORE 5200 :: GOSUB 9000 :: RESTORE 6200 :: GOSUB 9100
8010 CALL HCHAR(1,1,32,768) :: C=152 :: GOSUB 20300 :: C=160 :: GOSUB 20300 :: RESTORE 6000
8020 READ Y,X,C,N :: IF Y<0 THEN 8090
8030 CALL HCHAR(Y,X,C,N) :: GOTO 8020
8090 CALL VCHAR(17,30,192,4) :: CALL VCHAR(16,31,192,2) :: CALL VCHAR(15,32,192,2) :: CALL HCHAR(24,1,32,32)
8095 CALL VCHAR(18,31,192,3) :: CALL VCHAR(17,32,192,4) :: GOSUB 9200 :: FOR I=1 TO 11 :: CALL RB(I,A(I,2),0) :: NEXT I
8150 I=0 :: GOSUB 11100 :: CALL DS(F,F2) :: CALL DL(W) :: GOSUB 11400 :: GOSUB 7000
!GAME LOOP
!GAMESTATE GS 1 - PLAYING 2 - PAUSED 3 - LEVEL COMPLETE  4 - DISPLAY BONUS
8500 FD=0 :: GOSUB 12100 :: GOSUB 8700 :: ON GS GOSUB 10100,10200,13000,13100
!8520 IF KLD>10 OR A(1,1)=0 AND A(2,1)=0 AND A(3,1)=0 THEN 13700
8520 IF KLD=10 THEN CALL DELSPRITE(#9,#10) :: B(1),B(2)=0 :: GOTO 13700
8530 IF (H+MS)>=TG AND FD=0 THEN GS=3
8540 GOTO 8500
!HANDLE BULLETS AND GUN ANIMATIONS
8700 IF B(1)=1 THEN GOSUB 8900
8710 IF B(2)=1 THEN GOSUB 8950
!CHECK TO SEE IF ANIMATION IS NEEDED
8720 FOR Z=1 TO 3 :: ON A(Z,1)+1 GOTO 8770,8770,8740,8750,8760
8740 CALL PATTERN(#5+Z,84+(Z*8))
8750 A(Z,1)=A(Z,1)+1 :: GOTO 8770
8760 A(Z,1)=1 :: CALL PATTERN(#5+Z,88+(Z*8))
8770 NEXT Z :: RETURN
!CHANGE SHIP LANE
8800 IF L(S(IT,4)+1) > 0 THEN RETURN
8810 LN=0 :: CALL POSITION(#IT,Y,X) :: IF S(IT,4)>4 THEN GOTO 8870 ELSE GOSUB 8880
8830 IF ((S(IT,3)>0) AND (X>248)) OR ((S(IT,3)<0) AND (X<8)) THEN L(S(IT,4))=0 :: LN=(S(IT,4)+1)
8840 IF LN=0 THEN RETURN ELSE SH=IT :: GOSUB 9800
8850 IF (S(IT,3)<0) THEN CALL LOCATE(#IT,S(IT,7),256) ELSE CALL LOCATE(#IT,S(IT,7),1)
!VACATE OLD LANE, OCCUPY NEW ONE
8855 CALL MOTION(#IT,0,S(IT,3)) :: L(S(IT,4))=1 :: IF L(1)=0 AND CT<TG THEN CL=1
!START TARGETING
8860 IF S(IT,4)=5 THEN GOTO 10600
8865 RETURN
!CHECK IF WE'RE GOING OFF SCREEN
!8870 CALL LINK("DISPLY",24,2,STR$(X)&" "&STR$(S(IT,3)))
8870 IF (S(IT,3)>0 AND X>248) OR (S(IT,3)<0 AND X<8) THEN 9600
8880 IF (S(IT,3)>1 AND X>230) OR (S(IT,3)<-1 AND X<26) THEN 9700
8890 RETURN
!CHECK BULLET 1
8900 CALL POSITION(#9,BY,BX) :: IF BY<112 THEN RETURN ELSE CALL HS(9,B(1)) :: RETURN
!CHECK BULLET 2
8950 CALL POSITION(#10,BY,BX) :: IF BY<112 THEN RETURN ELSE CALL HS(10,B(2)) :: RETURN
!DEFINE GAME CHARS
9000 READ CN :: IF CN<0 THEN RETURN ELSE READ CC$ :: CALL LINK("CHAR2",CN,CC$) :: GOTO 9000
!SET SPRITE DATA
9100 READ CN,CC$ :: IF CN<1 THEN RETURN ELSE CALL CHAR(CN,CC$) :: GOTO 9100
!CREATE SPRITES
!SHIP 1
9200 CALL SPRITE(#1,32,1,193,1,#2,56,1,209,1,#3,64,1,225,1,#4,40,1,241,1,#5,48,1,193,17)
!CENTER GUN
9250 CALL SPRITE(#6,96,1,209,17,#7,104,1,225,17,#8,112,1,241,17,#9,120,1,193,33,#10,120,1,209,33)
!GEN 1
9300 CALL SPRITE(#11,124,1,193,45,#12,124,1,209,45,#13,124,1,241,45,#14,124,1,193,55)
!CITY 1
9320 CALL SPRITE(#15,128,1,209,55,#16,132,1,241,55,#17,136,1,193,71,#18,132,1,209,71)
!BEAM 1
9360 CALL SPRITE(#19,140,1,193,240,#20,140,1,193,224,#21,140,1,193,208,#22,140,1,193,192,#23,140,1,193,176) :: RETURN

!INITIALIZE
!
! TG - NUMBER OF SHIPS ENCOUNTERED PER LEVEL
! F - THE PLAYER'S SCORE
! U - ANIMATION ITERATOR, USED TO DETERMINE WHAT TO ANIMATE
! GS - GAME STATE, INDICATES STATE OF THE GAME 0 - NOT RUNNING, 1 - RUNNING, 2 - PAUSED, 3 - ?, 4 - level over
! PS - PREV STATE, STATE OF GAME PRIOR TO BEING PAUSED. THE STATE THE GAME RETURNS TO
! W - THE GAME LEVEL
! CL - CAN LAUNCH A NEW SHIP
! MS - NUMBER OF SHIPS THAT GT AWAY
! H  - NUMBER OF SHIPS DESTROYED
! CN - LAUNCHED SHIPS COUNT
! T - SHIPS LAUNCHED
! FD - TEST TO SEE IF KEY SCAN WAS MADE
9500 W=1 :: KLD,F,F2,U=0 :: GOSUB 9900 :: FOR I=1 TO 11 :: A(I,1)=1 :: NEXT I :: A(5,1)=0
9540 FOR I=1 TO 5 :: S(I,1),S(I,8)=0 :: S(I,5)=1 :: S(I,2)=80 :: NEXT I :: RETURN
!RESET SHIP IF OFF SCREEN
9600 IF S(IT,4)=5 AND (GS=1 OR GS=3) THEN MS=MS+1
!RESET FROM HERE IF SHOT DOWN
9610 CALL HS(IT,S(IT,1)) :: L(S(IT,4)),S(IT,8),S(IT,5),S(IT,1),S(IT,4)=0 :: IF (H+MS)>=TG THEN GS=3
9640 IF L(1)=0 AND CT<TG AND GS=1 THEN CL=1
9650 RETURN
!SLOW DOWN FOR SCREEN EDGES
9700 IF S(IT,3)<0 THEN CALL MOTION(#IT,0,-15) ELSE CALL MOTION(#IT,0,15)
9710 RETURN
!SET LANE
9800 S(SH,4),L(LN)=LN :: ON LN GOTO 9810,9820,9830,9840,9850
9810 S(SH,7)=4 :: RETURN
9820 S(SH,7)=22 :: RETURN
9830 S(SH,7)=38 :: RETURN
9840 S(SH,7)=55 :: RETURN
9850 GOSUB 10600 :: S(SH,7)=72 :: RETURN
!SETUP LEVEL SETTINGS
9900 TG=7 + (W * 3) :: PS,GS,CL=1 :: CT,H,MS,B(1),B(2)=0 :: FOR I=1 TO 5 :: S(I,5)=1 :: S(I,4),S(I,1),L(I)=0 :: NEXT I :: RETURN
!GAME PLAY
!U IS ANIMATION ITERATOR,DETERMINES WHICH ANIMATIONS TO RUN
10000 GOSUB 10150
!10012 CALL LINK("DISPLY",23,2,STR$(H)&" "&STR$(MS)&" "&STR$(CT)&" "&STR$(TG)&" "&STR$(GS))
10015 CALL KEY(1,K,ST) :: CALL AN(U) :: FD=1 :: IF K=15 THEN PS=GS :: GS=2
10020 IF K<>18 OR ST=-1 OR GS>1 THEN RETURN
10030 CALL JOYST(1,XR,YR) :: P=1 :: IF B(1)=0 THEN B(1)=1 :: SP=9 :: GOTO 10060
10040 IF B(2)=1 THEN RETURN
10050 SP=10 :: B(2)=1
10060 CALL LINK("PLAY",SHT) :: IF XR<0 THEN P=2 ELSE IF XR>0 THEN P=3
10070 IF A(P,1)=1 THEN CALL FIRE(P,SP,A(P,1))
10080 RETURN
!GAME RUNNING
10100 GOSUB 10000 :: IF CL=1 THEN GOSUB 10300
10110 GOTO 11500
!ANIMATE
10150 U=U+1 :: IF U>24 THEN U=1
10160 IF GS>0 THEN 10500 ELSE RETURN
!PAUSED
10200 CALL LINK("FREEZE") :: CALL LINK("DISPLY",9,14,"paused") :: CALL LINK("DELAY",500)
10210 CALL KEY(1,K,G) :: IF K=15 THEN 10230
10220 CALL LINK("DELAY",50) :: GOTO 10210
10230 GS=PS :: CALL LINK("DISPLY",9,14,"      ") :: CALL LINK("THAW") :: CALL LINK("DELAY",500) :: G,K=0 :: RETURN
!CHECK FOR NEW SHIP
10300 CALL LINK("IRND",10,R) :: IF R>0 THEN RETURN ELSE SH=0
!FIND THE FIRST AVAILABLE SH
10310 FOR I=1 TO 5 :: IF S(I,1)=0 THEN SH=I :: I=6
10320 NEXT I :: IF SH=0 THEN RETURN
!LAUNCH SH
10330 CT=CT+1 :: GOSUB 140 :: LN,S(SH,4)=1 :: S(SH,5)=1 :: S(SH,1)=1 :: CALL PATTERN(#SH,S(SH,2)) :: IF S(SH,3)>0 THEN S(SH,6)=1 ELSE S(SH,6)=256
10340 IF S(SH,2)=64 OR S(SH,2)=72 THEN CALL LINK("PLAY",LNCH)
10360 GOSUB 9800 :: CL=0 :: CALL PUT(SH,S(SH,6),S(SH,7)) :: CALL SW(SH) :: CALL MOTION(#SH,0,S(SH,3)) :: RETURN
!ANIMATE SHIPS, E IS FRAME
10500 E=U :: IF U>12 THEN E=E-12
10505 ON E GOTO 10510,10520,10530,10540,10550,10510,10520,10530,10540,10550,10510,10520
10510 N=1 :: GOTO 10560
10520 N=2 :: GOTO 10560
10530 N=3 :: GOTO 10560
10540 N=4 :: GOTO 10560
10550 N=5
10560 IF S(N,1)<>1 THEN RETURN ELSE IF S(N,2)>0 THEN CALL PATTERN(#N,S(N,2)+(S(N,5)*4)) :: S(N,5)=ABS(S(N,5)<1)
10590 RETURN
!FIND TARGET FOR DEATH BEAM
!10600 R=0 :: A(5,1)=0 :: CALL LINK("IRND",11,QQ) :: QQ=QQ+1
10600 IZ,R=0 :: CALL LINK("IRND",11,QQ) :: QQ=QQ+1
10610 IF A(QQ,1)>0 THEN R=QQ :: GOTO 10630
10615 IZ=IZ+1 :: QQ=QQ+1 :: IF QQ>11 THEN QQ=1
10620 IF IZ>11 THEN 10630 ELSE GOTO 10610
10630 IF R=0 THEN S(IT,1)=1 :: RETURN
10640 S(IT,8)=R :: S(IT,1)=10 :: ON R GOTO 10660,10670,10680,10690,10760,10700,10710,10720,10730,10740,10750
!CENTER GUN, BEAM Y IS ALWAYS 87,
!   8     9      10        11
!TARGET TXLEFT TXRIGHT BEAM COUNT
10660 S(IT,9)=111 :: S(IT,10)=131 :: S(IT,11)=1 :: RETURN
10670 S(IT,9)=0 :: S(IT,10)=17 :: S(IT,11)=2 :: RETURN
10680 S(IT,9)=225 :: S(IT,10)=251 :: S(IT,11)=1 :: RETURN
10690 S(IT,9)=95 :: S(IT,10)=107 :: S(IT,11)=3 :: RETURN
10700 S(IT,9)=223 :: S(IT,10)=235 :: S(IT,11)=3 :: RETURN
10710 S(IT,9)=15 :: S(IT,10)=27 :: S(IT,11)=4 :: RETURN
10720 S(IT,9)=20 :: S(IT,10)=51 :: S(IT,11)=5 :: RETURN
10730 S(IT,9)=55 :: S(IT,10)=91 :: S(IT,11)=4 :: RETURN
10740 S(IT,9)=143 :: S(IT,10)=179 :: S(IT,11)=4 :: RETURN
10750 S(IT,9)=183 :: S(IT,10)=219 :: S(IT,11)=3
10760 RETURN
!FIRE DEATH BEAM IF TARGET IS REACHED
10800 CALL MOTION(#IT,0,0) :: CALL POSITION(#IT,Y,X) :: IF X<S(IT,9) OR X>S(IT,10) THEN CALL MOTION(#IT,0,S(IT,3)) :: RETURN
10830 CALL LINK("PLAY",BLST) :: FL=-1 :: FOR Q=1 TO S(IT,11) :: CALL LOCATE(#(18+Q),69+(Q*16),X) :: NEXT Q
10850 FOR Q=1 TO S(IT,11) :: CALL MOTION(#(18+Q),0,S(IT,3)) :: NEXT Q :: CALL MOTION(#IT,0,S(IT,3))
10865 IF FL>0 THEN 10866 ELSE CALL COLOR(#19,9,#20,9,#21,9,#22,9,#23,9) :: CALL SCREEN(2) :: GOTO 10870
10866 CALL COLOR(#19,12,#20,12,#21,12,#22,12,#23,12) :: CALL SCREEN(16)
10870 FL=-FL :: CALL POSITION(#IT,Y,X) :: IF X<S(IT,9) OR X>S(IT,10) THEN 10880 ELSE GOTO 10865
10880 CALL SCREEN(2) :: CALL COLOR(#19,1,#20,1,#21,1,#22,1,#23,1) :: CALL MOTION(#19,0,0,#20,0,0,#21,0,0,#22,0,0,#23,0,0)
10890 CALL DY(S(IT,8),R) :: FOR Q=23 TO 19 STEP -1 :: CALL HS(Q,R) :: NEXT Q :: KLD=KLD+1 :: CALL LINK("PLAY",ASPL)
10900 S(IT,1)=1 :: A(S(IT,8),1)=0 :: IF ((X>4 AND X<251) OR (X<4 AND S(IT,3)>0) OR (X>251 AND S(IT,3)<0)) THEN RETURN
10920 S(IT,1)=0 :: CALL HS(IT,S(IT,1)) :: L(5)=0 :: MS=MS+1 :: RETURN
!SET GAME COLORS
11100 CALL LINK("COLOR2",3,9,2,4,9,2,5,9,13,6,9,13,7,9,13)
11105 CALL LINK("COLOR2",8,9,1,9,9,1,10,9,1,11,9,1,12,9,1)
11110 CALL LINK("COLOR2",13,11,8,14,15,8,15,15,1,16,11,1,17,15,1)
11115 CALL LINK("COLOR2",18,7,2,19,7,2,20,14,8,21,3,8,22,8,1) :: CALL LINK("COLOR2",23,4,1,1,9,1) :: RETURN
!SET SPRITE COLORS TO CLEAR
11300 FOR I=1 TO 23 :: CALL COLOR(#I,1) :: NEXT I :: RETURN
!SET ASSET SPRITE COLORS
11400 CALL COLOR(#6,9,#7,9,#8,9,#11,15,#13,15,#14,15) :: CALL COLOR(#15,7,#16,6,#17,6,#18,5) :: RETURN
!CHECK FOR COLLISIONS
11500 H1=0 :: IF B(1)=1 OR B(2)=1 THEN CALL COINC(ALL,H1)
!CHECK THE STATUS OF EACH SHIP
11510 FOR IT=5 TO 1 STEP -1 :: IF S(IT,1)=0 THEN 11530
11520 ON S(IT,1) GOSUB 11540,11560,11560,11560,11560,11580,11580,11570,11590,12000
!11520 ON S(IT,1) GOSUB 11540,11560,11560,11560,11560,11580,11570,11590,11590,12000
11530 NEXT IT :: RETURN
!LAUNCHED STATUS, CHECK FOR SHOTDOWN
11540 GOSUB 8800 :: IF H1=-1 THEN 11800 ELSE RETURN
!HIT STATUS, SET EXPLSION FRAME
11560 CALL PATTERN(#IT,S(IT,2)) :: S(IT,2)=S(IT,2)+4 :: S(IT,1)=S(IT,1)+1 :: RETURN
!EXPLOSION COMPLETE, HIDE SHIP
11570 S(IT,2)=80 :: GOTO 9610
11580 S(IT,1)=S(IT,1)+1
11590 RETURN
!CHECK FOR BULLET HIT
11800 CALL POSITION(#IT,Y,X) :: FOR IX=1 TO 2 :: IF B(IX)=0 OR X>248 THEN 11860 ELSE CALL COINC(#(8+IX),Y+7,X+7,10,H2)
11830 IF H2=0 THEN 11860 ELSE H=H+1
11840 CALL LINK("PLAY",SSPL) :: GOSUB 11900 :: CALL HS(8+IX,B(IX)) :: CALL MOTION(#IT,0,0,#(8+IX),0,0) :: F=F+(S(IT,9)*S(IT,4))
11850 CALL COLOR(#IT,7) :: CALL PATTERN(#IT,80) :: S(IT,1)=2 :: CALL DS(F,F2) :: GOSUB 11910 :: S(IT,2)=80 :: RETURN
11860 NEXT IX :: RETURN
!SCREEN EXPLOSION
11900 IF S(IT,2)>63 AND S(IT,2)<77 THEN CALL SCREEN(16) :: IF W<11 THEN GOSUB 13400 
11905 CALL LINK("PLAY",ASPL) :: RETURN
11910 IF S(IT,2)>63 AND S(IT,2)<77 THEN CALL SCREEN(2)
11920 CALL LINK("PLAY",ASPL) :: RETURN
!TARGET ASSET
12000 IF H1=-1 THEN GOSUB 11800
12010 IF S(IT,1)=0 THEN RETURN
12020 GOTO 10800
!SECONDARY COLLISION DETECT
12100 H1=0 :: IF B(1)=1 OR B(2)=1 THEN CALL COINC(ALL,H1) ELSE RETURN
12105 IF H1=0 THEN RETURN
12110 FOR IT=5 TO 1 STEP -1 :: IF S(IT,1)=1 OR S(IT,1)=10 THEN GOSUB 11800
12130 NEXT IT :: RETURN
!LEVEL COMPLETE, LET ANY BULLETS OR SHIPS CLEAR OUT
13000 FL=1 :: CALL HS(9,B(1)) :: CALL HS(10,B(2)) 
13010 CR=0 :: FOR IT=1 TO 5 :: IF S(IT,1)=0 THEN 13060 ELSE CR=1
13030 ON S(IT,1) GOSUB 8870,11560,11560,11560,11560,11580,11580,11570,11590,11590
13060 CALL LINK("SYNC") :: NEXT IT :: GOSUB 10000 :: IF CR=1 THEN 13010
13080 GS=4 :: RETURN
!DISPLAY BONUS
13100 IF KLD>=10 THEN RETURN
13110 CALL LINK("DISPLY",5,10,"wave complete!") :: CALL LINK("PLAY",YAY) :: CALL LINK("DISPLY",7,12,"bonus    0") :: E=30 :: GOSUB 13300
13115 GOSUB 13500 :: F=F+BN :: CALL DS(F,F2) :: GOSUB 13300
13120 W=W+1 :: CALL DL(W) :: E=60 :: GOSUB 13300 :: CALL HCHAR(7,12,32,10) :: CALL HCHAR(5,10,32,14) :: E=20 :: GOSUB 13300 :: GOSUB 9900 :: GOTO 7000
!DISPLAY DELAYS
13300 FOR Q=1 TO E :: IF FL>0 THEN GOSUB 10150
13310 FL=-FL :: CALL LINK("SYNC") :: NEXT Q :: RETURN
!DESTROY ON SCREEN SHIPS DURING EXPLOSION
13400 FOR Q=1 TO 5 :: IF Q=IT OR S(Q,1)<>1 THEN 13420
13410 F=F+(S(Q,9)*S(Q,4)) :: CALL COLOR(#Q,7) :: CALL PATTERN(#Q,80) :: S(Q,1)=2 :: S(Q,2)=80 :: H=H+1
13420 NEXT Q :: RETURN
!ADD UP BONUS
13500 FL=1 :: BN=0 :: GOSUB 13300 :: IF W<10 THEN BS=W*10 ELSE BS=100
13510 E=1 :: FOR IZ=1 TO 11 :: IF A(IZ,1)=0 OR IZ=5 THEN 13560
13520 BN=BN+BS :: B$=STR$(BN)
13530 IF LEN(B$)<4 THEN B$=" "&B$ :: GOTO 13530
!BLINK 3 TIMES
13540 CALL LINK("PLAY",DNG) :: FOR X=1 TO 3 :: CALL LINK("DISPLY",7,18,B$) :: CALL COLOR(#(A(IZ,2)),1) :: GOSUB 13300 :: CALL SW(A(IZ,2)) :: NEXT X 
13560 NEXT IZ :: GOSUB 13300 :: E=20
!REBUILD ASSET
13600 IF KLD<1 THEN RETURN
13610 FOR IZ=1 TO 12 :: IF A(IZ,1)>0 OR IZ=5 THEN 13640
13620 CALL LINK("DISPLY",7,10,"rebuild asset!") :: CALL LINK("DELAY",2000)
13630 CALL RB(IZ,A(IZ,2),1) :: CALL LINK("PLAY",YAY) :: A(IZ,1)=1 :: KLD=KLD-1 :: GOSUB 13300 :: CALL HCHAR(7,10,32,14) :: RETURN
13640 NEXT IZ :: RETURN
!GAME OVER
13700 CALL DELSPRITE(#9,#10) :: B(1),B(2)=0 :: GOSUB 13800 :: E,FL=1 :: CALL LINK("DELAY",500)
13705 CALL LINK("PLAY",LST) :: CALL LINK("DISPLY",7,8,"1-restart  2-quit")
13710 IF FL>0 THEN CALL LINK("DISPLY",5,12,"game over")
13720 CALL KEY(0,K,ST) :: IF K=49 THEN 20 :: CALL DELSPRITE(ALL)
13725 IF K=50 THEN END
13730 GOSUB 13300 :: IF FL<0 THEN CALL HCHAR(5,12,32,9)
13740 GOTO 13710
!MOVE SHIPS OFF SCREEN
13800 R=0 :: FOR IT=1 TO 5 :: IF S(IT,1)<>1 THEN R=R+1 :: GOTO 13830
13820 CALL POSITION(#IT,Y,X) :: IF (X<10 AND S(IT,3)<0) OR (X>247 AND S(IT,3)>0) THEN CALL HS(IT,S(IT,1))
13830 NEXT IT :: IF R<5 THEN 13800 ELSE RETURN

!SOUND DATA
!17000 LNCH=2766 :: BLST=2744 :: ASPL=2712 :: QWT=2693 :: LST=2600 :: STRT=2551 :: YAY=2469 :: SHT=2459 :: SSPL=2432 :: RETURN

!SUBROUTINES
!BLACKOUT THE SCREEN CHARACTERS 
20000 FOR I=0 TO 24 :: CALL LINK("COLOR2",I,C,1) :: NEXT I :: RETURN
!DRAW THE STARFIELD
20300 FOR I=1 TO 20 :: CALL LINK("IRND",32,X,14,Y,5,V) :: CALL HCHAR(Y+1,X+1,C+V) :: NEXT I :: RETURN
!PLACE THE sprite ON THE SCREEN
20600 SUB PUT(N,XX,YY)
20601 Y=YY :: X=XX :: IF N>12 THEN 20606
20605 ON N GOTO 20770,20770,20770,20770,20770,20610,20620,20630,20770,20770,20640,20650
20606 ON N-12 GOTO 20660,20670,20680,20690,20700,20710,20720,20730,20740,20750,20760
20610 X=121 :: Y=88 :: GOTO 20770
20620 X=8 :: Y=98 :: GOTO 20770
20630 X=234 :: Y=90 :: GOTO 20770
20640 X=105 :: Y=121 :: GOTO 20770
20650 GOTO 20770 ! X=145 :: Y=137 :: GOTO 20770
20660 X=233 :: Y=121 :: GOTO 20770
20670 X=17 :: Y=137 :: GOTO 20770
20680 X=37 :: Y=154 :: GOTO 20770
20690 X=73 :: Y=129 :: GOTO 20770
20700 X=161 :: Y=137 :: GOTO 20770
20710 X=201 :: Y=121 :: GOTO 20770
20720 Y=89 :: GOTO 20770
20730 Y=105 :: GOTO 20770
20740 Y=121 :: GOTO 20770
20750 Y=137 :: GOTO 20770
20760 Y=153
20770 CALL LOCATE(#N,Y,X)
20780 SUBEND
!REBUILD THE ASSET GIVEN THE ASSET INDEX
20800 SUB RB(N,V,F)
20805 V=0 :: ON N GOTO 20810,20820,20830,20840,20850,20856,20858,20860,20870,20880,20890
!CENTER GUN
20810 CALL HCHAR(13,16,144) :: CALL HCHAR(13,17,145) :: CALL HCHAR(12,16,146) :: CALL HCHAR(12,17,147)
20815 CALL LOCATE(#6,88,121) :: V=6 :: CALL PATTERN(#6,96) :: IF F=1 THEN CALL COLOR(#6,9)
20816 GOTO 20899
!LEFT GUN
20820 CALL HCHAR(14,1,144) :: CALL HCHAR(14,2,148) :: CALL LOCATE(#7,98,8) :: CALL PATTERN(#7,104) :: IF F=1 THEN CALL COLOR(#7,9)
20825 V=7 :: GOTO 20899
!RIGHT GUN
20830 CALL HCHAR(13,31,149) :: CALL HCHAR(13,32,145) :: CALL LOCATE(#8,90,234) :: CALL PATTERN(#8,112) :: IF F=1 THEN CALL COLOR(#8,9)
20835 V=8 :: GOTO 20899
!GEN 1
20840 CALL HCHAR(16,14,184) :: V=11 :: CALL LOCATE(#11,121,105) :: CALL PATTERN(#11,124) :: IF F=1 THEN CALL COLOR(#11,15)
20845 GOTO 20899
!GEN 2
!20850 CALL HCHAR(18,19,184) :: V=12 :: CALL LOCATE(#12,137,145) :: CALL PATTERN(#12,124)
20850 V=12 :: GOTO 20899
!GEN 3
20856 CALL HCHAR(16,30,184) :: V=13 :: CALL LOCATE(#13,121,233) :: CALL PATTERN(#13,124) :: IF F=1 THEN CALL COLOR(#13,15)
20857 GOTO 20899
!GEN 4
20858 CALL HCHAR(19,4,184) :: V=14 :: CALL LOCATE(#14,145,25) :: CALL PATTERN(#14,124) :: IF F=1 THEN CALL COLOR(#14,15)
20859 GOTO 20899
!CITY 1
20860 CALL HCHAR(20,6,131) :: CALL HCHAR(21,5,128) :: CALL HCHAR(21,6,129) :: CALL HCHAR(21,7,130)
20865 V=15 :: CALL LOCATE(#15,154,37) :: CALL PATTERN(#15,128) :: IF F=1 THEN CALL COLOR(#15,7)
20866 GOTO 20899
!CITY 2
20870 CALL HCHAR(18,9,132) :: CALL HCHAR(18,10,133,2) :: CALL HCHAR(18,12,134)
20875 V=16 :: CALL LOCATE(#16,129,73) :: CALL PATTERN(#16,132) :: IF F=1 THEN CALL COLOR(#16,6)
20876 GOTO 20899
!CITY 3
20880 CALL HCHAR(19,20,136,2) :: CALL HCHAR(19,22,137,2) :: CALL LOCATE(#17,137,161) :: V=17 :: CALL PATTERN(#17,136) :: IF F=1 THEN CALL COLOR(#17,6)
20886 GOTO 20899
!CITY 4
20890 CALL HCHAR(17,25,132) :: CALL HCHAR(17,26,133,2):: CALL HCHAR(17,28,134)
20895 V=18 :: CALL LOCATE(#18,121,201) :: CALL PATTERN(#18,132) :: IF F=1 THEN CALL COLOR(#18,5)
20899 SUBEND
! DISPLAY THE SCORE
20900 SUB DS(C,C2)
20910 IF C>9999 THEN C2=C2+1 :: C=C-10000
20920 C$=STR$(C) :: C2$=STR$(C2)
20930 IF LEN(C$)<4 THEN C$="0"&C$ :: GOTO 20930
20940 IF LEN(C2$)<4 THEN C2$="0"&C2$ :: GOTO 20940
20950 CALL LINK("DISPLY",24,2,C2$&C$)
20960 SUBEND
! DISPLAY THE LEVEL FLAGS GIVEN C - THE LEVEL
21000 SUB DL(C)
21005 CALL HCHAR(24,20,32,12) :: IF C<10 THEN CALL HCHAR(24,31-(C-1),168,C) :: GOTO 21060
21010 X=C :: J=INT(C/10)
21020 IF J>0 THEN X=C-(J*10)
21040 IF X>0 THEN CALL HCHAR(24,31-(X-1),168,X)
21050 IF J>0 THEN CALL HCHAR(24,31-(X),168+J)
21060 SUBEND
!ANIMATE SCREEN CHARS GIVEN THE ANIMATION INDEX
21100 SUB AN(C)
21104 IF C>12 THEN 21106
21105 ON C GOTO 21110,21120,21180,21180,21150,21130,21180,21120,21180,21180,21150,21160
21106 ON C-12 GOTO 21140,21120,21180,21180,21150,21130,21180,21120,21180,21180,21150,21160
21110 CALL HCHAR(15,3,200,12) :: CALL HCHAR(15,19,200,12) :: GOTO 21180
21120 CALL LINK("CHAR2",184,"00183C183C183C7E") :: GOTO 21180
21130 CALL LINK("COLOR2",16,16,1,17,11,1) :: GOTO 21180
21140 CALL HCHAR(15,3,201,12) :: CALL HCHAR(15,19,201,12) :: GOTO 21180
21150 CALL LINK("CHAR2",184,"003C183C183C187E") :: GOTO 21180
21160 CALL LINK("COLOR2",16,11,1,17,16,1)
21180 SUBEND
!REMOVE SPRITE FROM GAME, SET STATUS N SPRITE NUMBER, V IS STATUS
21200 SUB HS(N,V)
21201 CALL MOTION(#N,0,0) :: CALL COLOR(#N,1) :: V=0 :: Y=193 :: X=1 :: IF N>12 THEN T=N-12 :: GOTO 21206
21205 ON N GOTO 21398,21220,21230,21240,21250,21260,21270,21280,21300,21290,21310,21399
21206 ON T GOTO 21330,21340,21350,21360,21370,21380,21390,21392,21393,21394,21395
!SHIP 2
21220 Y=209 :: GOTO 21398
21230 Y=225 :: GOTO 21398
21240 Y=241 :: GOTO 21398
21250 X=17 :: GOTO 21398
!GUN CENTER
21260 Y=209 :: X=17 :: GOTO 21398
21270 Y=225 :: X=17 :: GOTO 21398
21280 Y=241 :: X=17 :: GOTO 21398
21290 Y=209
21300 X=33 :: GOTO 21398
!GEN 1
21310 X=45 :: GOTO 21398
21320 Y=209 :: X=45 :: GOTO 21398
21330 X=55 :: GOTO 21398
21340 Y=209 :: X=55 :: GOTO 21398
!CITY 1
21350 Y=225 :: X=55 :: GOTO 21398
21360 X=256 :: GOTO 21398 
21370 Y=209 :: X=256 :: GOTO 21398
21380 Y=225 :: X=256 :: GOTO 21398
!BEAM 1
21390 X=240 :: Y=193 :: GOTO 21398
21392 X=224 :: Y=193 :: GOTO 21398
21393 X=208 :: Y=193 :: GOTO 21398
21394 X=192 :: Y=193 :: GOTO 21398
21395 X=176 :: Y=193
21398 CALL LOCATE(#N,Y,X)
21399 SUBEND
! DESTROY THE ASSET GIVEN THE INDEX
21400 SUB DY(N,V)
21405 ON N GOTO 21410,21420,21430,21440,21499,21460,21470,21480,21485,21490,21495
!GUN 1
21410 SI=6 :: CALL HCHAR(12,16,32,2) :: CALL HCHAR(13,16,150) :: CALL HCHAR(13,17,151) :: GOTO 21496
21420 SI=7 :: CALL HCHAR(14,1,150) :: CALL HCHAR(14,2,151) :: GOTO 21496
21430 SI=8 :: CALL HCHAR(13,31,151) :: CALL HCHAR(13,32,150) :: GOTO 21496
!GEN 1
21440 SI=11 :: CALL HCHAR(16,14,188) :: GOTO 21496
21450 SI=12 :: CALL HCHAR(18,19,188) :: GOTO 21496
21460 SI=13 :: CALL HCHAR(16,30,188) :: GOTO 21496
21470 SI=14 :: CALL HCHAR(19,4,188) :: GOTO 21496
!CITY 1
21480 SI=15 :: CALL HCHAR(20,6,194) :: CALL HCHAR(21,5,135,3) :: GOTO 21496
21485 SI=16 :: CALL HCHAR(18,9,135,4) :: GOTO 21496
21490 SI=17 :: CALL HCHAR(19,20,138) :: CALL HCHAR(19,23,141) :: CALL HCHAR(19,21,139) :: CALL HCHAR(19,22,140) :: GOTO 21496
21495 SI=18 :: CALL HCHAR(17,25,135,4)
21496 CALL HS(SI,V)
21499 SUBEND
!FIRE A BULLET GIVEN P - THE GUN SOURCE N - THE BULLET SPRITE Q - SET THE ASSET STATE
21500 SUB FIRE(P,N,Q)
21510 Q=3 :: ON P GOTO 21520,21530,21540
21520 X=128 :: Y=85 :: XX=0 :: YY=-25 :: C=100 :: SPR=6 :: GOTO 21550
21530 X=22 :: Y=98 :: XX=15 :: YY=-15 :: C=108 :: SPR=7 :: GOTO 21550
21540 X=234 :: Y=90 :: XX=-15 :: YY=-15 :: C=116 :: SPR=8
21550 CALL PATTERN(#SPR,C) :: CALL LOCATE(#N,Y,X) :: CALL COLOR(#N,15) :: CALL MOTION(#N,YY,XX)
21560 SUBEND
! DISPLAY THE SPRITE
21600 SUB SW(N)
21601 C=15 :: CALL LINK("IRND",12,R) :: R=R+3 :: IF N>12 THEN 21606
21605 ON N GOTO 21610,21610,21610,21610,21610,21630,21630,21630,21640,21640,21690,21699
21606 ON N-12 GOTO 21690,21690,21650,21660,21660,21670,21675,21675,21675,21675,21675
!SHIP 1
21610 C=R :: GOTO 21690
!GUN
21630 C=9 :: GOTO 21690
!BUL
21640 C=16 :: GOTO 21690
!CITY 1
21650 C=7 :: GOTO 21690
21660 C=6 :: GOTO 21690
21670 C=5 :: GOTO 21690
21675 C=14 :: GOTO 21690
21690 CALL COLOR(#N,C)
21699 SUBEND

