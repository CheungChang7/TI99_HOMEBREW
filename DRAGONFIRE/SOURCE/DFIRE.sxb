!SIZZL=6176 :: FB2=6455 :: FLL=6498 :: ARROW=6567 :: SPL=6586 :: JAMP=6622 :: STP=6706 :: FB1=6722
!TRES=6741 :: DROPN=6800 :: PK3=6824 :: DUCK=7006 :: FF1=7050 :: FF2=7088 :: CALL LINK("PLAY",
GOTO TITLE
GAME:
DIM DT$(14) :: DT$(9)="40804060F0F06000020102060F0F06" :: DT$(10)="102224242422100008442424244408"
CALL LINK("SCRN2") :: CALL LINK("SCREEN",2) :: GOSUB BLKOUT :: CALL MAGNIFY(3)
DT$(6)="1C76FFABB5DD6A3C000000000000000000000000000000000" :: DT$(7)="3C66DEB7EDB75E3C000000000000000000000000000000000"
DT$(8)="29571F77BB210000000000000000000080C0E0E0C08000000" :: GOTO LDCHMP
GMTOP:
GOSUB DFSTRNG :: DIM LFT(8) :: DIM RGT(8) :: DIM TR(17) :: DIM DX(5) :: DIM DY(5) :: DIM DS(5)
FOR I=1 TO 4 :: LFT(I)=28+(I*4) :: LFT(I+4)=68+(I*4) :: RGT(I)=48+(I*4) :: RGT(I+4)=88+(I*4) :: NEXT I
GOSUB STTRES :: GOTO RSTRT
FIN:
    IF PH=2 AND LEV>5 AND KT=0 THEN GOSUB CHTRL
    GOSUB CKFB :: IF LF=0 THEN GMO
    MY=0 :: CN=CN+1 :: IF CN=CNT THEN GOSUB FRBLL :: CN=0
    IF (PH=1 AND PX<10) OR (PH=2 AND PY<23 AND PX<70) THEN GOSUB PHUP
    FLP=-FLP :: IF FLP<0 THEN GOSUB ANSCR :: IF BON>0 THEN BON=BON-1
    IF J>0 THEN JM
    IF PY=116 AND PX<62 AND PX>29 THEN GOSUB CKFALL :: IF LF=0 THEN GMO
    CALL JOYST(1,JX,JY) :: CALL KEY(1,K,S) :: IF S<>0 AND K=18 AND PH=1 THEN J=1 :: GOTO JM
    IF JY=-4 AND PH=1 THEN CROUCH ELSE IF JY<>0 AND PH=2 THEN UPDOWN
    IF JX=-4 THEN MVLFT ELSE IF JX=4 THEN MVRGT
STAND:
      IF FC>0 THEN CALL PATTERN(#1,52,#2,92) ELSE CALL PATTERN(#1,32,#2,72)
      CALL LOCATE(#1,PY,PX,#2,PY,PX) :: FR=1 :: GOTO FIN
CROUCH:
       IF FC>0 THEN CALL PATTERN(#1,68,#2,108) ELSE CALL PATTERN(#1,48,#2,88)
       CALL LOCATE(#1,PY+4,PX,#2,PY+4,PX) :: FR=1 :: GOTO FIN
UPDOWN:
        IV=8 :: IF JY=-4 AND PY<118 THEN MY=AM ELSE IF JY=4 AND PY>22 THEN MY=-AM
        IF JX=-4 THEN MVLFT ELSE IF JX=4 THEN MVRGT
        GOTO CHKCR
MVLFT:
      IF FC>0 THEN FC=-FC :: FR=0
      IF PH=2 THEN CHKCHL
      IF PX>2 THEN PX=PX-AM
      GOTO MVPL
MVRGT:
      IF FC<0 THEN FC=-FC :: FR=0
      IF PH=2 THEN CHKCHR
      IF PX<240 THEN PX=PX+AM
MVPL:
     FR=FR+1 :: IF FR>4 THEN FR=1 :: IF PH=1 THEN CALL LINK("PLAY",6706)
     IF FC<0 THEN CALL PATTERN(#1,LFT(FR),#2,LFT(FR+4)) ELSE CALL PATTERN(#1,RGT(FR),#2,RGT(FR+4))
     CALL LOCATE(#1,PY,PX,#2,PY,PX) :: GOTO FIN
CHKCHL:
       IV=4 :: GOTO CHKCR
CHKCHR:
       IV=12
CHKCR:
       TY=INT(((PY+8)+MY)/8)+1 :: TX=INT((PX+IV)/8)+1 :: CALL GCHAR(TY,TX,GCH) :: CALL GCHAR(TY+1,TX,GCH2)
       IF GCH<23 OR (GCH>155 AND GCH<160) OR (GCH>76 AND GCH<88) THEN MVPL ELSE PY=PY+MY
       IF IV<8 AND PX>9 THEN PX=PX-AM ELSE IF IV>8 AND PX<240 THEN PX=PX+AM
       IF GCH=23 OR GCH>159 THEN CALL HCHAR(TY,TX,32) :: GOSUB GTSCR :: GOSUB DSC
       IF GCH2=23 OR GCH2>159 THEN CALL HCHAR(TY+1,TX,32) :: GCH=GCH2 :: GOSUB GTSCR :: GOSUB DSC
       GOTO MVPL
JM:
     IF J>13 THEN RJ=J-13 :: GOTO RSPR
     ON J GOTO CR1,CR1,CR1,SPR1,SPR2,SPR2,SPR2,SPR2,SPR2,SPR2,SPR2,SPR2,SPR3
RSPR:
     ON RJ GOTO SPR3,SPR3,SPR3,SPR4,SPR4,SPR4,SPR4,SPR4,SPR4,SPR4,SPR4,SPR4
CR1:
    IF FC>0 THEN CALL PATTERN(#1,68,#2,108) ELSE CALL PATTERN(#1,48,#2,88)
    CALL LOCATE(#1,PY+4,PX,#2,PY+4,PX) :: J=J+1 :: IF J=26 THEN J=0
    CALL LINK("PLAY",6622) :: GOTO FIN
SPR1:
     IF FC>0 THEN CALL PATTERN(#1,60,#2,100) ELSE CALL PATTERN(#1,40,#2,80)
SPR2:
     PY=PY-1
SPR3:
     IF JX<0 AND PX>2 THEN PX=PX-1 ELSE IF JX>0 AND PX<240 THEN PX=PX+1
     GOTO JND
SPR4:
     PY=PY+1 :: IF JX<0 AND PX>2 THEN PX=PX-1 ELSE IF JX>0 AND PX<240 THEN PX=PX+1
JND:
    J=J+1 :: IF J=26 THEN J=0
    CALL LOCATE(#1,PY,PX,#2,PY,PX) :: GOTO FIN
LDCHMP:
       RESTORE SPLASH :: READ DT$(11) :: READ DT$(12) :: READ DT$(13) :: READ DT$(14)
       RESTORE 10002 :: GOSUB RDDEF :: RESTORE 30006 :: GOSUB RDDEF :: GOTO GMTOP
LDPHASE:
        BON=200 :: DTY=Z :: DTX=140 :: ON PH GOTO PH1,PH2
PH1:
    AM=2 :: SY=116 :: SX=240 :: FC=-1 :: CALL CHAR(140,DT$(4))
    CALL PATTERN(#5,136) :: RESTORE 30000 :: GOSUB RDDEF
    IF LEV>3 THEN CALL HCHAR(3,2,12) :: CALL HCHAR(4,2,13) :: CALL HCHAR(3,3,14) :: CALL HCHAR(4,3,15)
    GOSUB BLDB :: GOTO CLR1
PH2:
    AM=4 :: DTY=159 :: DTX=118 :: SY=89 :: SX=240 :: FX=-1 :: CALL CHAR(140,DT$(1)) :: CALL PATTERN(#8,140) :: BR=1
    RESTORE 30026 :: GOSUB RDDEF
    CALL HCHAR(1,1,32,32) :: GOSUB DSTRES :: CALL COLOR(#8,DT) :: CALL HCHAR(11,31,156,2) :: CALL HCHAR(12,31,156,2) :: GOTO CLR3
CLR1:
     CALL LINK("COLOR2",-3,13,1,-2,13,1,-1,7,1,0,11,1,1,7,1)
     CALL LINK("COLOR2",2,7,1,3,7,1,4,7,1,5,15,1,6,8,6)
     CALL LINK("COLOR2",7,15,5,8,14,1,9,14,1,10,14,5,11,5,6)
     CALL LINK("COLOR2",12,4,13,13,13,1,14,4,11,15,5,1,16,5,6)
     CALL LINK("COLOR2",17,15,1,18,15,1,19,DC,1,20,4,1,21,15,1) :: CALL LINK("COLOR2",22,7,1) :: RETURN
CLR2:
     CALL LINK("COLOR2",14,11,1,19,12,1) :: RETURN
CLR3:
     CALL LINK("COLOR2",28,DC,1, 10,12,1,7,12,1,6,12,1,12,11,1)
     CALL LINK("COLOR2",-1,7,1,1,7,1,2,7,1,3,7,1,4,7,1)
     CALL LINK("COLOR2",23,DC,1,24,DC,1,25,DC,1,26,DC,1,27,DC,1)
     CALL LINK("COLOR2",19,11,1,5,7,1,22,7,1,15,5,1,5,7,1)
     CALL LINK("COLOR2",17,15,1,20,4,1,0,11,1,16,11,1):: RETURN
ANSCR:
      IF PH=1 THEN FBP=FBP+1 :: IF FBP=3 THEN FBP=0 :: FL2=-FL2 :: IF FL2<0 THEN CALL PATTERN(#3,128,#4,132) ELSE CALL PATTERN(#3,132,#4,128)
      AF=AF+1 :: IF PH=1 THEN GOSUB ANM1 ELSE GOSUB ANM2
      IF PH=2 THEN FL2=-FL2 :: IF FL2<0 THEN CALL CHAR(128,DT$(6)) ELSE CALL CHAR(128,DT$(7))
      IF AF<AFL THEN RETURN
      AF=0 :: IF PH=1 AND LEV>2 THEN DRB
      RETURN
STPSPR:
       CALL MOTION(#3,0,0,#4,0,0,#5,0,0,#6,0,0,#7,0,0) :: CALL COLOR(#3,1,#4,1,#5,1,#6,1,#7,1)
       CALL LOCATE(#9,220,160) :: CALL COLOR(#9,1)
       CALL LOCATE(#3,220,40,#4,220,60,#5,220,80,#6,220,100,#7,220,120) :: FOR I=1 TO 5 :: DS(I),DX(I),DY(I)=0 :: NEXT I :: RETURN
CKFALL:
       CALL GCHAR(17,INT((PX+7)/8)+1,GCH) :: IF GCH<184 THEN RETURN ELSE CALL LINK("PLAY",6498)
DIE1:
       CT,FBP=0 :: DEAD,FL2,FLP=-1 :: GOSUB STPSPR
       FOR PY=119 TO 179 STEP 3 :: CT=CT+1
           IF CT=3 AND PY<195 THEN CT=0 :: FLP=-FLP :: IF FLP<0 THEN CALL PATTERN(#1,112,#2,116) ELSE CALL PATTERN(#1,120,#2,124)
           CALL LOCATE(#1,PY,PX,#2,PY,PX) :: GOSUB ANSCR :: CALL LINK("DELAY",50) :: NEXT PY
       CALL COLOR(#1,1,#2,1) :: CALL LOCATE(#1,181,PX) :: LF=LF-1 :: CALL LINK("PLAY",6586)
       FOR I=11 TO 14 :: CALL CHAR(32,DT$(I)) :: CALL COLOR(#1,16) :: CALL PATTERN(#1,32) :: CALL LINK("DELAY",100) :: NEXT I :: GOTO RESPL
DIE2:
       CYC,CT,FBP=0 :: DEAD,FL2,FLP=-1 :: GOSUB STPSPR
       FOR PY=119 TO 179 STEP 3 :: CT=CT+1
           IF CT=3 AND PY<195 THEN CT=0 :: FLP=-FLP :: IF FLP<0 THEN CALL PATTERN(#1,112,#2,116) ELSE CALL PATTERN(#1,120,#2,124)
           CALL LINK("DELAY",50) :: NEXT PY :: CALL COLOR(#1,1,#2,1) :: LF=LF-1
RESPL:
      CALL COLOR(#1,1) :: CALL CHAR(32,"00010303010000000002020000000103008040E0C000000000C0C000000060E")
      CALL PATTERN(#1,32) :: DEAD=0 :: GOSUB DLF :: IF LF=0 THEN RETURN ELSE GOSUB REPOSPR
STPOS:
      FB3,BR,DEAD=0 :: IF LEV>3 AND PH=1 THEN CALL HCHAR(3,2,0) :: CALL HCHAR(4,2,1) :: CALL HCHAR(3,3,14) :: CALL HCHAR(4,3,15)
      IF PH=1 THEN GOSUB BLDB
      IF LF>0 THEN CALL LOCATE(#1,SY,SX,#2,SY,SX) :: CALL PATTERN(#1,32,#2,72) :: CALL COLOR(#1,10,#2,5,#9,1) :: GOSUB RDY
      RETURN
PHUP:
     TRX=160 :: TRY=220 :: PX=13 :: AFL=24 :: TCL=1 :: MTY,MTX=2 :: KT=0
     CALL COLOR(#1,1,#2,1,#3,1,#4,1,#5,1) :: CALL COLOR(#6,1,#7,1,#9,1) :: IF PH=1 THEN PH=2 ELSE PH=1 :: LEV=LEV+1 :: AFL=16
     IF PH=1 THEN CALL CHAR(128,DT$(8)) ELSE CALL CHAR(128,DT$(6)) :: PX=9 :: IF LEV>5 THEN TRX=70 :: TRY=56 :: TCL=15
     CALL LINK("FREEZE") :: GOSUB SETDC :: CALL LINK("DELAY",100) :: GOSUB ADBN :: CALL LINK("DELAY",1000)
DISCREEN:
         GOSUB BLKOUT :: GOSUB LDPHASE :: GOSUB REPOSPR :: BR,FBP,CT,J,AF=0 :: CALL LINK("IRND",45,CNT) :: CN=0 :: IF CNT<27 THEN CNT=27
         GOSUB DSC :: GOSUB DLF :: GOSUB DLV :: GOSUB STPOS :: IF PH=1 THEN RESTORE 8100 ELSE RESTORE 8000
         GOSUB RDDEF :: CALL PATTERN(#9,132) :: CALL LOCATE(#9,TRY,TRX) :: RETURN
DSBN:
     IF BON>0 THEN A$=STR$(BON)&"0" ELSE A$="0"
LNBN:
     IF LEN(A$)<4 THEN A$="0"&A$ :: GOTO LNBN
     CALL HCHAR(6,PX,34) :: CALL LINK("DISPLY",6,PX+1,"/.?= "&A$) :: CALL LINK("DELAY",50) :: RETURN
ADBN:
     GOSUB DSBN :: IF BON<=0 THEN RETURN
     CALL KEY(1,K,S) :: IF K=18 AND S<>0 THEN SC=SC+BON :: BON=0 ELSE SC=SC+1 :: BON=BON-1
     GOSUB DSC :: CALL LINK("PLAY",7006) :: GOTO ADBN
REPOSPR:
        IF PH=1 OR LEV<6 OR TK=1 THEN TRX=160 :: TRY=220
        CALL LINK("FREEZE") :: J=0 :: FL,FR=1 :: FL2,FLP=-1 :: PY=SY :: PX=SX :: CALL MOTION(#1,0,0,#2,0,0,#3,0,0,#4,0,0,#5,0,0)
        CALL MOTION(#6,0,0,#7,0,0) :: CALL LOCATE(#1,Z,1,#2,Z,20,#3,Z,40,#4,Z,60,#5,Z,80)
        CALL LOCATE(#6,Z,100,#7,Z,120,#8,DTY,DTX) :: FOR I=1 TO 5 :: DS(I),DX(I),DY(I)=0 :: NEXT I :: CALL LINK("THAW") :: RETURN
FRBLL:
      IF PH=2 THEN RETURN
      IF LEV>1 AND DS(1)=1 AND DS(2)=0 THEN DS(2)=1 :: CALL LOCATE(#4,125,5) :: CALL COLOR(#4,7) :: CALL MOTION(#4,0,20+LEV) :: CALL LINK("PLAY",6455)
      IF DS(1)=0 AND DS(2)=0 THEN DS(1)=1 :: CALL LOCATE(#3,114,5) :: CALL COLOR(#3,7) :: CALL MOTION(#3,0,20+LEV) :: CALL LINK("PLAY",6722)
      RETURN
CKFB:
     CALL COINC(ALL,H1) :: IF H1=0 THEN CHSPR ELSE IF PH=2 THEN CHCHSP
     CALL COINC(#3,PY+8,PX+8,11,H1) :: CALL COINC(#4,PY+8,PX+8,8,H2) :: CALL COINC(#5,PY+8,PX+8,8,H3)
     IF H1=-1 OR H2=-1 THEN H6=0 :: GOTO HIT ELSE IF H3=-1 THEN CALL LINK("PLAY",6498) :: GOTO DIE1
CHSPR:
      CALL POSITION(#3,DY(1),DX(1),#4,DY(2),DX(2),#5,DY(3),DX(3),#6,DY(4),DX(4),#7,DY(5),DX(5))
      ON PH GOTO CHSP1,CHSP2
CHSP1:
      IF (DS(1)=1 AND DX(1)>240) THEN GOSUB RESET1
      IF (DS(2)=1 AND DX(2)>240) THEN GOSUB RESET2
      IF (DS(3)=1 AND DY(3)>192) THEN GOSUB RESET3
      RETURN
CHSP2:
      IF DS(1)=1 AND (DX(1)>220) THEN GOSUB RESET1
      IF DS(2)=1 AND (DX(2)>210 OR DY(2)<50) THEN GOSUB RESET2
      IF DS(3)=1 AND (DY(3)<32) THEN GOSUB RESET3
      IF DS(4)=1 AND (DX(4)<24 OR DY(4)<60) THEN GOSUB RESET4
      IF DS(5)=1 AND (DX(5)<20) THEN GOSUB RESET5
      RETURN
CHCHSP:
       CALL COINC(#3,PY+8,PX+8,8,H1) :: CALL COINC(#4,PY+8,PX+8,8,H2) :: CALL COINC(#5,PY+8,PX+8,8,H3) :: CALL COINC(#6,PY+8,PX+8,8,H4)
       CALL COINC(#7,PY+8,PX+8,8,H5) :: CALL COINC(#9,PY+8,PX+8,13,H6)
       IF H1=-1 OR H2=-1 OR H3=-1 OR H4=-1 OR H5=-1 OR H6=-1 THEN GOSUB STPSPR :: GOTO HIT
       GOTO CHSPR
RESET1:
       SPR=3 :: X=40 :: DS(1)=0 :: GOTO RESETSP
RESET2:
       SPR=4 :: X=60 :: DS(2)=0 :: GOTO RESETSP
RESET3:
       SPR=5 :: X=80 :: FB3,CYC,DS(3)=0 :: IF PH=1 THEN CALL COLOR(#5,1) :: CALL PATTERN(#5,136)
       GOTO RESETSP
RESET4:
       SPR=6 :: X=100 :: DS(4)=0 :: GOTO RESETSP
RESET5:
       SPR=7 :: X=120 :: DS(5)=0 :: GOTO RESETSP
RESETSP:
        CALL MOTION(#SPR,0,0) :: CALL COLOR(#SPR,1) :: IF SPR=5 AND PH=1 THEN CALL PATTERN(#5,136)
        CALL LOCATE(#SPR,Z,X) :: RETURN
RSTRT:
      CALL CHAR(128,DT$(8)) :: AFL=16 :: FLP,FL2=-1 :: SX,PX=240 :: DTX=140 :: SY,PY=116 :: DTY,Z=220 :: LEV=1 :: PH=1
      KT,FB3,CYC,XTR,FL,BR,AF,J,FBP,AR,CN,SC=0 :: DT,LF=7 :: DC=4 :: SP1=6 :: SP2=12 :: SP3=18
      FOR I=1 TO 5 :: DS(I),DY(I),DX(1)=0 :: NEXT I :: GOSUB REPOSPR :: GOSUB DISCREEN :: GOTO FIN
STARC:
      RETURN
HIT:
    IF H6=0 THEN CALL COLOR(#1,9,#2,7) ELSE GOSUB CMTRL :: IF KT=1 THEN KTROLL
    CALL LINK("PLAY",6176)
FALL:
    CALL MOTION(#3,0,0,#4,0,0,#5,0,0) :: IF PH=1 THEN DIE1 ELSE DIE2
KTROLL:
       CALL COLOR(#9,1) :: CALL LINK("PLAY",6824) :: SC=SC+100 :: GOSUB DSC :: CALL LOCATE(#9,220,160) :: RETURN
SPLASH:
       DATA "00000002010006061311080000000000000000000030704050102","00000C00181C0610222210000000000000000038B870401088881"
       DATA "2041003068042044484824000000000000000E1E30200442222244","008070C800408890909048000000000000000E1300020111111122"
DRB:
    IF DEAD=-1 THEN RETURN
    BR=BR+1 :: IF (PH=1 AND BR=9) OR (PH=2 AND BR=5) THEN BR=1
    ON BR GOTO Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q8
    RETURN
Q1:
   IF LEV<4 OR FB3<>0 THEN QB
   FB3,CYC=1 :: CALL HCHAR(3,2,0) :: CALL HCHAR(4,2,1) :: CALL HCHAR(3,3,2) :: CALL HCHAR(4,3,3) :: CALL LOCATE(#5,19,14) :: CALL COLOR(#5,12)
QB:
   CALL HCHAR(17,9,184) :: CALL HCHAR(17,8,139) :: RETURN
Q2:
   IF LEV>3 AND CYC=1 THEN CALL HCHAR(3,2,4) :: CALL HCHAR(4,2,5) :: CALL HCHAR(3,3,6) :: CALL HCHAR(4,3,7) :: CALL LOCATE(#5,19,13)
   CALL HCHAR(17,8,186) :: CALL HCHAR(17,7,139) :: RETURN
Q3:
   IF LEV>3 AND CYC=1 THEN CALL HCHAR(3,2,8) :: CALL HCHAR(4,2,9) :: CALL HCHAR(3,3,10) :: CALL HCHAR(4,3,11) :: CALL LOCATE(#5,19,12)
   CALL HCHAR(17,7,186) :: CALL HCHAR(17,6,139) :: RETURN
Q4:
   CALL HCHAR(17,6,186) :: CALL HCHAR(17,5,185) :: RETURN
Q5:
   CALL HCHAR(17,5,24) :: CALL HCHAR(17,6,139) :: IF LEV>3 AND FB3=1 AND CYC=1 THEN FRARW ELSE RETURN
Q6:
   CALL HCHAR(17,6,140) :: CALL HCHAR(17,7,139) :: RETURN
Q7:
   CALL HCHAR(17,7,140) :: CALL HCHAR(17,8,139) :: RETURN
Q8:
   CALL HCHAR(17,8,140) :: CALL HCHAR(17,9,25) :: BR=0 :: RETURN
BLDB:
     CYC=0 :: CALL HCHAR(17,5,24) :: CALL HCHAR(17,6,140,3) :: CALL HCHAR(17,9,25) :: RETURN
RDY:
    IF PH=1 AND LEV>3 THEN CALL HCHAR(3,2,12) :: CALL HCHAR(4,2,13) :: CALL HCHAR(3,3,14) :: CALL HCHAR(4,3,15) :: CALL PATTERN(#5,136)
    CALL LINK("DISPLY",6,14,"<%!$") :: CALL HCHAR(6,18,204) :: CALL HCHAR(6,19,205)
    IF PH=1 THEN CALL LINK("PLAY",7050) ELSE CALL LINK("PLAY",7088)
    CALL LINK("DELAY",2000) :: CALL HCHAR(6,14,32,6) :: CALL COLOR(#1,10,#2,5)
    IF PH=2 AND LEV>5 AND KT=0 THEN CALL LOCATE(#9,TRY,TRX) :: CALL COLOR(#9,15)
    RETURN
FRARW:
      DS(3)=1 :: CALL HCHAR(3,2,12) :: CALL HCHAR(4,2,13) :: CALL HCHAR(3,3,14) :: CALL HCHAR(4,3,15)
      CALL SPRITE(#5,140,12,30,28,20,15) :: CALL LINK("PLAY",6567) :: RETURN
DSC:
    S$=STR$(SC)&"0" :: L=6-LEN(S$) :: IF L<1 THEN DSE
    FOR I=1 TO L :: S$="0"&S$ :: NEXT I
DSE:
    CALL LINK("DISPLY",1,11,S$) :: RETURN
DLF:
    CALL HCHAR(1,17,32,6) :: IF LF>1 THEN CALL HCHAR(1,17,145,LF-1)
    RETURN
DLV:
    CALL HCHAR(1,30,26) :: CALL LINK("DISPLY",1,31,STR$(LEV)) :: RETURN
GMO:
    F=1 :: C=0 :: PX=9 :: PY=3 :: IF PH=2 THEN PX=8 :: PY=9
GMD:
    CALL LINK("DISPLY",PY,PX,">(/? !<> &).)=(%$") :: CALL HCHAR(PY,PX+17,205)
GMK:
    CALL KEY(0,K,S) :: C=C+1 :: IF S<>0 THEN GME
    IF C=200 THEN C=0 :: F=-F :: IF F<0 THEN CALL HCHAR(PY,PX,32,18) ELSE GMD
    GOTO GMK
GME:
    CALL HCHAR(6,PX,32,10) :: GOTO RSTRT
SETDC:
      L=LEV :: DT=7
STDC:
      IF L>10 THEN L=L-10 :: IF L>10 THEN STDC
      IF LEV<11 THEN SP1=L+5 ELSE SP1=15
      SP2=SP1*2 :: SP3=SP1*3
      ON L GOTO SD1,SD2,SD3,SD4,SD5,SD6,SD7,SD8,SD9,SD10
SD1:
    DC=4 :: RETURN
SD2:
    DC=6 :: RETURN
SD3:
    DC=14 :: RETURN
SD4:
    DC=15 :: RETURN
SD5:
    DC=9 :: DT=12 :: RETURN
SD6:
    DC=8 :: RETURN
SD7:
    DC=12 :: RETURN
SD8:
    DC=5 :: RETURN
SD9:
    DC=13 :: RETURN
SD10:
     DC=7 :: DT=12 :: RETURN
ANM1:
   ON AF GOTO AN1,AE,AE,AE,AN2,AE,AE,AE,AN3,AE,AE,AE,AN2,AE,AE,AE
AN1:
    CALL LINK("CHAR2",28,DT$(9),73,DT$(10)) :: CALL HCHAR(4,22,176) :: RETURN
AN2:
    CALL LINK("CHAR2",28,"40204060F0F06000040804060F0F06",73,"04080809080804002010109010102") :: CALL HCHAR(4,22,177) :: RETURN
AN3:
    CALL LINK("CHAR2",28,DT$(9),73,DT$(10)) :: CALL HCHAR(4,22,178) :: RETURN
AE:
   RETURN
ANM2:
     YEX,XEX,MKSPR=0 :: SND=6722 :: IF LEV<10 THEN VL=8+LEV ELSE VL=18
     CALL LINK("IRND",VL,VEX)
     ON AF GOTO A1,AE,AE,A2,AE,AE,A3,AE,AE,A4,AE,AE,A5,AE,AE,A4,AE,AE,A3,AE,AE,A2,AE,AE,
A1:
   CALL CHAR(140,DT$(1)) :: CC=235 :: X=15 :: DTY=159 :: DTX=118 :: YEX=-(VEX/2)
   IF DS(1)=0 THEN DS(1)=1 :: MKSPR=1 :: SPY=-SP1 :: SPX=SP2 :: SPN=3 :: NX=136 :: NY=154
   GOTO DDE
A2:
   CALL CHAR(140,DT$(1)) :: CC=235 :: X=15 :: DTY=159 :: DTX=118 :: SND=6455 :: YEX=-VEX
   IF DS(2)=0 AND LEV>2 THEN MKSPR=1 :: DS(2)=1:: SPY=-SP2 :: SPX=SP2 :: SPN=4 :: NX=136 :: NY=154
   GOTO DDE
A3:
   DTY=150 :: DTX=113 :: CALL VCHAR(20,14,32,2) :: CALL VCHAR(20,17,32,2) :: CALL CHAR(140,DT$(2)) :: CALL HCHAR(20,15,247) :: CALL HCHAR(21,15,248)
   CALL HCHAR(20,16,249) :: CALL HCHAR(21,16,250) :: CALL LOCATE(#8,150,113) :: CALL COLOR(#8,DT) :: IF PX<125 THEN XEX=-VEX ELSE XEX=VEX
   IF DS(3)=0 THEN CALL SPRITE(#5,128,7,141,117,-SP3,XEX) :: DS(3)=1 :: CALL LINK("PLAY",6455)
   RETURN
A4:
   CALL CHAR(140,DT$(3)) :: CC=241 :: X=14 :: DTY=159 :: DTX=108 :: YEX=-VEX
   IF DS(4)=0 AND LEV>3 THEN MKSPR=1 :: DS(4)=1 :: SPY=-SP2 :: SPX=-SP2 :: SPN=6 :: NX=97 :: NY=154
   GOTO DDE
A5:
   CALL CHAR(140,DT$(3)) :: CC=241 :: X=14 :: DTY=159 :: DTX=108 :: SND=6455 :: YEX=-(VEX/2)
   IF DS(5)=0 THEN MKSPR=1 :: DS(5)=1 :: SPY=-SP1 :: SPX=-SP2 :: SPN=7 :: NX=97 :: NY=154
DDE:
    CALL HCHAR(20,X,CC) :: CALL HCHAR(21,X,CC+1) :: CALL HCHAR(20,X+1,CC+2) :: CALL HCHAR(21,X+1,CC+3) :: CALL HCHAR(20,X+2,CC+4) :: CALL HCHAR(21,X+2,CC+5)
    CALL LOCATE(#8,DTY,DTX) :: CALL COLOR(#8,DT)
    IF MKSPR=1 THEN CALL SPRITE(#SPN,128,7,NY,NX,SPY+YEX,SPX+XEX) :: CALL LINK("PLAY",SND)
    RETURN
CMTRL:
      IF (MTX>0 AND PX<TRX) OR (MTX<0 AND PX>TRX) THEN KT=1
      RETURN
CHTRL:
      TRX=TRX+MTX :: TRY=TRY+MTY
      IF TRX<72 OR TRX>172 THEN MTX=-MTX :: TRX=TRX+MTX :: IF MTX>0 THEN CALL PATTERN(#9,132) ELSE CALL PATTERN(#9,136)
      IF TRY<50 OR TRY>62 THEN MTY=-MTY :: TRY=TRY+MTY
      CALL LOCATE(#9,TRY,TRX) :: RETURN
STTRES:
       TCL,K=1 :: FOR I=187 TO 191 :: TR(K)=I :: K=K+1 :: NEXT I :: FOR I=160 TO 165 :: TR(K)=I :: K=K+1 :: NEXT I
       FOR I=179 TO 183 :: TR(K)=I :: K=K+1 :: NEXT I :: TR(K)=23 :: RETURN
DSTRES:
       TC,C=0
GTLOC:
      CALL LINK("IRND",10,R1,18,R2,17,R3) :: IF R1<2 AND (R2<3 OR R2>16) THEN GTLOC
      CALL GCHAR(7+R1,9+R2,G) :: IF G<>32 THEN GTLOC
      C=C+1 :: CALL HCHAR(7+R1,9+R2,TR(R3+1)) :: IF C=6+(LEV*2) THEN RETURN ELSE GTLOC
DFSTRNG:
        DT$(1)="C0C0000007020000000000000000000002043FF0A00000000" :: DT$(2)="02010101000000000000001800000000408080800000000000000018"
        DT$(3)="4020FC0F05000000000000000000000003030000E04000000" :: DT$(4)="40E0703008040201000000000000000000000000000000008050307"
        RETURN
GTSCR:
      V=0 :: FOR I=1 TO 17 :: IF GCH=TR(I) THEN V=I :: I=18
      NEXT I :: IF V=0 THEN RETURN
      TC=TC+1 :: IF TC>=6+(LEV*2) THEN CALL VCHAR(4,10,32,2) :: CALL HCHAR(3,10,127) :: CALL LINK("PLAY",6800) ELSE CALL LINK("PLAY",6741)
      ON V GOTO SC6,SC4,SC3,SC5,SC5,SC1,SC2,SC2,SC5,SC6,SC5,SC6,SC7,SC6,SC6,SC5,SC8
SC1:
    SC=SC+1 :: RETURN
SC2:
    SC=SC+2 :: RETURN
SC3:
    SC=SC+3 :: RETURN
SC4:
    SC=SC+4 :: RETURN
SC5:
    SC=SC+5 :: RETURN
SC6:
    SC=SC+10 :: RETURN
SC7:
    SC=SC+20 :: RETURN
SC8:
    SC=SC+30 :: RETURN
TITLE:
RESTORE 8200 :: GOSUB RDDEF :: CALL LINK("CHAR2",57,"00000038443C083") :: Y=0 :: X=1 :: CALL MAGNIFY(3)
CALL SPRITE(#1,128,1,41,49,0,0,#2,132,1,41,201,0,0,#9,132,1,220,160,0,0)
CALL CLEAR :: CALL LINK("SCRN2") :: CALL LINK("SCREEN",15) :: GOSUB BLKOUT
RESTORE 7000 :: GOSUB RDDEF :: RESTORE 7013 :: GOSUB RDDEF :: RESTORE 7100 :: GOSUB RDDEF
LDCOLS:
       CALL LINK("COLOR2",3,9,2,5,9,2,6,9,2,7,9,2,8,9,2) :: CALL COLOR(#1,16,#2,2,#9,1) :: CALL LINK("WINDOW",17,2,24,31)
       RESTORE TXTINS
RDKY:
     CALL KEY(0,K,S) :: IF K=81 THEN MUSTOP
     IF Y=1 THEN READ A$ :: CALL LINK("DISPLY",24,2,A$,0) :: X=X+1
     IF X>24 THEN X=1 :: RESTORE TXTINS
     IF K=32 AND Y<21 THEN CALL LINK("SCRLUP")
     CALL LINK("DELAY",100) :: Y=Y+1 :: IF Y=20 THEN CALL LINK("SCRLUP")
     IF K=32 OR Y=40 THEN Y=1 :: CALL LINK("SCRLUP")
     GOTO RDKY
MUSTOP:
       CALL COLOR(#1,1,#2,1) :: CALL CLEAR :: GOTO GAME
TXTINS:
DATA "         DRAGON FIRE          "
DATA "    HOMEBREW JUNE 15, 2025"
DATA "                 BY B.GRAY"
DATA " DRAGONS HAVE DRIVEN THE ROYAL"
DATA "COURT FROM THE CASTLE. WITHOUT"
DATA " HIS VAST TREASURES, THE KING"
DATA "CANNOT RAISE AN ARMY TO DEFEAT"
DATA " THE SCALY, FIRE-BREATHING IN-"
DATA " VADERS. HIS KINGDOM IS RULED"
DATA "BY LIZARDS. YET A YOUNG PRINCE"
DATA "KNOWS THE CASTLES MANY BRIDGES"
DATA "AND STOREROOMS BETTER THAN ALL"
DATA "OTHERS THROUGHOUT THE KINGDOM."
DATA " HE PLOTS TO LOOT THE DRAGONS"
DATA " OF THE PLUNDER AND REGAIN THE"
DATA " PALACE.'BRAVE BOY', TREMBLES"
DATA " HIS FATHER, THE KING, AS THE"
DATA "PRINCE LEAVES FOR THE RAMPARTS"
DATA " 'PLEASE, I BEG, FOR THE SAKE"
DATA " OF THOSE WHO LOVE YOU, BEWARE"
DATA "  THE DREADED DRAGONFIRE!'"
DATA " "
DATA " "
DATA " "
BLKOUT:
       CALL COLOR(#1,1,#2,1,#3,1,#4,1,#5,1) :: CALL COLOR(#6,1,#7,1,#8,1) :: CALL LINK("COLOR2",81,2,2) :: RETURN
RDDEF:
      READ A$
      IF A$="" THEN RETURN ELSE CALL LINK("CWRITE",A$)
      GOTO RDDEF

