REM READ PACMAN DATA
! PLAYER OBJECT:
! STATE | DIR 1-4 | FRME 0-3 | X | Y | SPD |ANDR| CHAR # | TIMER
!   1        2         3       4   5    6    7    8   |    9      |    10   |  11  | 12  |   13   |   14   |  15  |    16
! GHOST OBJECT:
! STATE | DIR 1-4 | FRM 0-1 | X | Y | SPD | CH | TMR  | RTE INDEX | RTE DIR | RTE# | COL | B CHAR | B COL  | TMR2 |  SCR STAT
! GHOST STATES
!  1    EATEN ENTERING HOME
!  2    BUSTING OUT
!  3    IN JAIL
!  4    ROAMING
!
! ROUTES: 1-4 MAZE ROUTES
!         5 JAIL ROUTE
!         6 BUST OUT
!         7 HOMING
! COLOR SET MAP: RED 5 - 16
!                YEL 12 - 17
!                GLD 11 - 18
!                LGN 4  - 19
!                DGR 13 - 20
!                WHT 16 - 21
!                GRY 15 - 22
!                LBL 8  - 23
!                PNK 10 - 24
! LM - FRCH, FRX, FRY, COL, tmr1, TMR, S
! E()=RZ(9) (ROUTE SIZES) :: B() - SCORES ARRAY :: O()=RTS() ROUTE MAPPING
! A   X() LV()
! B   B()
! C   X CNT
! D   X INST,GCL,PIX
! E   X()
! F   X DCL
! G   X()
! H   GDX
! I   EVERYWHERE
! J   PDX
! K   X CALL KEY,SCENES
! L   L()
! M   X MCL
! N   X GAME,N$()
! O   X()
! P   X()
! Q   X STRTS,CONF
! R   X()
! S   X CALL KEY,
! T   X YST, CMV
! U   X GLF
! V   X XLF
! W   X RDGFX, SCENE
! X   X CONF,INST,GAMEOVER,SCENES
! Y   X INST,CALL KEY,SCENES,KY
! Z   Z$(),PCL

OPTION BASE 1 :: DIM G(4,16) :: DIM Z$(57) :: DIM E(9) :: DIM R(9,58) :: DIM B(10) :: DIM N$(10) :: DIM O(4) :: RANDOMIZE :: KN=69 :: KS=88 :: KE=68 :: KW=83 :: ZL=3
CALL CLEAR :: CALL LINK("SCRN2") :: CALL SCREEN(2) :: I=0 :: GOSUB OPEN1 :: GOSUB RDTXT :: CALL DP(11,12,Z$(57)) :: JZ=0
GOSUB RDGFX :: GOSUB RDSS :: GOSUB LDMU :: GOSUB CLOS1 :: GOSUB OPEN2
TOP:
GOSUB INTLZ :: GOSUB SETCOL :: GOSUB RDXGFX :: GOSUB RDLEV :: GOSUB MKSPRTS :: GOSUB BLKOUT :: GOSUB DRTITLE :: END
INTLZ:
    I,U,RZ,I,P2,DT,S1=0 :: M=5 :: E(5)=5 :: LV=1 :: E(6)=2 :: LF=ZL :: E(7)=3 :: GB=20 :: R(5,5),R(5,1)=81
    R(5,2)=73 :: R(5,3)=97 :: R(5,4)=121 :: DC=12 :: R(6,2),R(7,1)=65 :: R(6,1),R(7,2)=97 :: R(7,3)=81 :: GOSUB INITPAC :: RETURN
INITPAC:
    P3,P2=1 :: P4=97 :: P5=145 :: N,P1=0 :: P6=4 :: CALL PATTERN(#5,32) :: RETURN
OPEN1:
    ON ERROR OPEN1 :: I=I+1 :: A$="DSK"&STR$(I) :: IF I>8 THEN END
    OPEN #1:A$&".PS",INPUT :: OPEN #2:A$&".PG",INPUT :: OPEN #3:A$&".TX" :: RETURN
OPEN2:
    OPEN #1:A$&".PD",INPUT :: OPEN #2:A$&".LV",INPUT :: OPEN #3:A$&".RT" :: RETURN
LDMU:
     RESTORE 20000 :: FOR I=1 TO 13 :: READ B$ :: CALL LINK("CWRITE",B$) :: NEXT I :: RETURN
START:
    V$=Z$(47) :: CALL LINK("PLAY",7407) :: CALL CLEAR :: GOSUB BLKOUT :: R1=1 :: GOSUB STFMP :: GOSUB DRHUD :: GOSUB DRMAZE :: GOSUB SETCOL
    GOSUB STGH :: CALL DL(LF) :: UU=0 :: Q=1 :: CALL CS(B(1),0,2,LF,Q) :: CALL LINK("PLAY",6176) :: CALL LINK("DELAY",2000) :: GOTO GAME
READY:
    FI=1 :: CALL LINK("DISPLY",15,11,"*+,-./") :: CALL LINK("DELAY",2500) :: CALL HCHAR(15,11,32,6) :: RETURN
STGH:
    GOSUB ERGHOST :: GOSUB ERPAC :: CALL MAGNIFY(1) :: GOSUB STRTS :: FOR I=1 TO 4 :: G(I,3),G(I,9),G(I,10)=1 :: G(I,1)=3 :: G(I,15)=A7-I :: IF G(I,15)<0 THEN G(I,15)=0
    G(I,2)=4 :: G(I,4)=81+((I-2)*16) :: G(I,5)=89 :: G(I,16),G(I,8)=0 :: G(I,11)=5 :: G(I,13)=48 :: NEXT I
    G(1,1)=4 :: P4,G(1,4)=97 :: G(1,5)=65 :: G(1,11)=O(1) :: P3,G(1,15)=0 :: G(1,14),G(1,12)=7 :: G(2,14),G(2,12)=14
    G(3,14),G(3,12)=8 :: G(4,14),G(4,12)=11 :: P2,P1=1 :: P5=145 :: GOSUB SETPATS :: I=1 :: GOTO RNDDR
STRTS:
      CALL LINK("IRND",4,Q) :: Q=Q+1 :: FOR I=1 TO 4 :: O(I)=Q :: Q=Q+1 :: IF Q>4 THEN Q=1
      NEXT I :: RETURN
WTKY:
     CALL LINK("DELAY",200)
WTK2:
     CALL KEY(0,K,S) :: IF S=0 THEN WTK2 ELSE RETURN
SETPATS:
    FOR I=1 TO 4 :: G(I,7)=G(I,13)+((G(I,2)-1)*2)+G(I,3) :: G(I,3)=G(I,3)+1 :: IF G(I,3)=2 THEN G(I,3)=0
    NEXT I :: P8=32+((P2-1)*4)+P3 :: P3=P3+1 :: IF P3=4 THEN P3=0
    RETURN
BLKOUT:
    FOR I=-3 TO 24 :: CALL LINK("COLOR2",I,2,2) :: NEXT I :: RETURN
SETCOL:
    CALL LINK("COLOR2",-3,12,2,-2,7,2,-1,13,2,0,16,2,1,DC,2)
    CALL LINK("COLOR2",2,12,2,3,16,2,4,16,2,5,16,2,6,16,2)
    CALL LINK("COLOR2",7,16,2,8,16,2,9,M,2,10,M,2,11,11,2)
    CALL LINK("COLOR2",12,8,2,13,16,2,14,16,2,15,16,2,16,7,2)
    CALL LINK("COLOR2",17,12,2,18,11,2,19,4,2,20,13,2)
    CALL LINK("COLOR2",21,16,2,22,15,2,23,8,2,24,10,2) :: RETURN
DRMAZE:
    FOR I=1 TO 24 :: CALL LINK("DISPLY",I,1,Z$(I)) :: NEXT I :: C=0 :: RETURN
DRHUD:
    CALL CLEAR :: CALL DP(1,26,Z$(41)) :: CALL HCHAR(2,26,48,7) :: CALL DP(4,26,Z$(56)) :: CALL HCHAR(5,26,48,7) :: RETURN
CONF:
     CALL DP(3,10,Z$(49)) :: CALL DP(7,10,"JOYSTK ^_") :: FOR I=0 TO 5 :: CALL DP(9+(I*2),10,Z$(50+I)) :: NEXT I :: K,X,Q=1 :: CALL HCHAR(7,8,35) :: GOTO STKY
RCNF:
     CALL KEY(0,Y,S) :: K=K+1 :: IF K>=50 THEN K=0 :: CALL BK(F)
     IF S<=0 THEN RCNF ELSE IF Y=32 THEN GOTO HILI
     ON Q GOTO RC0,RC1,RC2,RC3,RC4,RC5,RC6
RC0:
    IF Y=45 THEN JZ=0 :: GOTO STKY ELSE IF Y=43 OR Y=61 THEN JZ=1 :: GOTO STKY ELSE RCNF
RC1:
    IF Y>48 AND Y<91 THEN KN=Y :: GOTO STKY ELSE RCNF
RC2:
    IF Y>48 AND Y<91 THEN KS=Y :: GOTO STKY ELSE RCNF
RC3:
    IF Y>48 AND Y<91 THEN KE=Y :: GOTO STKY ELSE RCNF
RC4:
    IF Y>48 AND Y<91 THEN KW=Y :: GOTO STKY ELSE RCNF
RC5:
    IF Y=45 AND LF>1 THEN ZL,LF=LF-1 :: GOTO STKY ELSE IF (Y=43 OR Y=61) AND LF<5 THEN ZL,LF=LF+1 :: GOTO STKY ELSE RCNF
RC6:
    IF Y=13 OR Y=32 THEN DRTITLE ELSE RCNF
HILI:
     X=Q :: Q=Q+1 :: IF Q>7 THEN Q=1
     CALL HCHAR(7+((X-1)*2),8,32) :: CALL HCHAR(7+((Q-1)*2),8,35) :: GOTO RCNF
STKY:
     J$="NO " :: IF JZ=1 THEN J$="YES"
     CALL DP(7,23,J$) :: CALL HCHAR(9,23,KN) :: CALL HCHAR(11,23,KS) :: CALL HCHAR(13,23,KE)
     CALL HCHAR(15,23,KW) :: CALL HCHAR(17,23,32,5) :: CALL HCHAR(17,23,162,LF) :: GOTO RCNF
DRSS:
    CALL DP(2,4,Z$(37)) :: FOR I=1 TO 10 :: CALL DP(2+(I*2),9,N$(I)) :: B$=STR$(B(I))&"0" :: CALL DP(2+(I*2),25-LEN(B$),B$) :: NEXT I :: I=0 :: F=1
KYSS:
    CALL KEY(0,Y,S) :: IF Y>31 AND Y<99 THEN HNDKEY
    K=K+1 :: IF K>=50 THEN K=0 :: CALL BK(F)
    GOTO KYSS
CLINTR:
    FOR I=2 TO 23 :: CALL HCHAR(I,2,32,30) :: NEXT I :: RETURN
CLMAZE:
    FOR I=1 TO 24 :: CALL HCHAR(I,1,32,25) :: NEXT I :: RETURN
DRBRDR:
    FOR I=1 TO 31 STEP 2 :: CALL HCHAR(1,I,34) :: CALL HCHAR(24,I,35) :: CALL HCHAR(1,I+1,35) :: CALL HCHAR(24,I+1,34) :: NEXT I
    FOR I=2 TO 22 STEP 2 :: CALL HCHAR(I,1,35) :: CALL HCHAR(I,32,34) :: CALL HCHAR(I+1,1,34) :: CALL HCHAR(I+1,32,35) :: NEXT I :: RETURN
DRTITLE:
    GOSUB INITPAC :: G(1,3)=0 :: GOSUB HDSPRTS :: CALL CLEAR :: GOSUB DRBRDR :: GOSUB PTSPRTS :: GOSUB SETCOL :: J,I=0 :: F=1
DISSTRT:
    CALL KEY(0,Y,S) :: IF Y>48 AND Y<53 THEN HNDKEY
    IF I=0 THEN CALL DP(13,9,Z$(33)) :: CALL DP(15,5,Z$(34)) :: CALL DP(17,5,Z$(35)) :: CALL DP(19,5,Z$(36))
    IF I=40 THEN CALL HCHAR(13,9,32,16) :: CALL HCHAR(15,5,32,24) :: CALL HCHAR(17,5,32,24) :: CALL HCHAR(19,5,32,24)
    J=J+1 :: IF J>10 THEN CALL BK(F) :: J=0
    I=I+1 :: IF I>40 THEN I=0
    GOSUB MVTITL :: GOTO DISSTRT ::  RETURN
MVTITL:
    P3=P3+1 :: IF P3=4 THEN P3=0 :: G(1,3)=G(1,3)+1 :: IF G(1,3)=2 THEN G(1,3)=0
    CALL MT(6,3,G(1,4),G(1,5),134,1,88,G(1,3),4,C) :: CALL LOCATE(#7,G(1,5),G(1,4))
    CALL MT(8,1,P4,P5,108,1,96,P3,4,C) :: RETURN
HNDKEY:
    GOSUB HDSPRTS :: GOSUB CLINTR
    IF Y=50 THEN K=0 :: Y=49 :: GOTO DRINST ELSE IF Y=49 THEN START ELSE IF Y=51 THEN DRSS ELSE IF Y=52 THEN CONF ELSE GOTO DRTITLE
MKSPRTS:
    CALL SPRITE(#1,48,1,193,1,0,0,#2,48,1,193,17,0,0,#3,48,1,193,33,0,0,#4,48,1,193,49,0,0)
    CALL SPRITE(#5,40,1,193,65,0,0,#14,76,1,193,209,0,0,#15,72,1,193,225,0,0,#16,80,1,193,241)
    CALL SPRITE(#6,88,1,193,81,0,0,#7,120,1,193,97,0,0,#8,96,1,193,113,0,0,#9,84,1,193,129,0,0)
    CALL SPRITE(#10,84,1,193,145,0,0,#11,64,1,193,161,0,0,#12,68,1,193,177,0,0,#13,108,1,193,193,0,0) :: RETURN
HDSPRTS:
    CALL LOCATE(#1,193,1,#2,193,17,#3,193,33,#4,193,49,#5,193,65)
    CALL LOCATE(#6,193,81,#7,193,97,#8,193,113,#9,193,129,#10,193,145)
    CALL LOCATE(#11,193,161,#12,193,177,#13,193,193,#14,193,209,#15,193,224,#16,193,241) :: RETURN
PTSPRTS:
    CALL MAGNIFY(3) :: CALL LOCATE(#11,49,87,#12,35,95,#13,21,109,#14,21,133,#15,35,145,#16,50,157)
    CALL LOCATE(#9,50,171,#10,50,187,#6,69,234,#7,69,234,#8,69,8) :: CALL COLOR(#11,8,#12,8,#13,8,#14,8,#15,8)
    CALL COLOR(#16,8,#9,8,#10,8,#6,7,#7,16,#8,12) :: G(1,4)=234 :: P4=8 :: G(1,5),P5=69 :: RETURN
COLGHOST:
    CALL COLOR(#1,7,#2,14,#3,8,#4,11,#5,12) :: RETURN
ERGHOST:
    CALL COLOR(#1,1,#2,1,#3,1,#4,1) :: CALL PATTERN(#1,48,#2,48,#3,48,#4,48) :: RETURN
ERPAC:
    CALL COLOR(#5,1) :: RETURN
DRINST:
    GOSUB STGH :: CALL DP(5,9,Z$(38)) :: FOR I=1 TO 4 :: CALL SI(Y,49,I,G(I,14),G(I,7),Z$(25+((I-1)*2)),Z$(26+((I-1)*2)),7+(2*(I-1)),K,F)
    Y=Y+16 :: NEXT I :: CALL BL(K,F) :: CALL DP(19,14,Z$(42)) :: CALL DP(21,14,Z$(43)) :: CALL DP(17,7,Z$(44))
    CALL LOCATE(#5,129,140) :: CALL PATTERN(#5,76) :: CALL COLOR(#5,12) :: P4=140 :: P5=129 :: P8=40 :: Q=48 :: Z=49 :: FP=-1 :: P2=3 :: Y=17 :: P3=0
    D=73 :: X=10 :: GOSUB MVPA :: D=65 :: X=9 :: GOSUB MVPA :: D=57 :: X=8 :: GOSUB MVPA :: D=49 :: X=7 :: GOSUB MVPA :: CALL COLOR(#1,5,#2,5,#3,5,#4,5) :: P2=4 :: Q=56 :: Z=57
    P8=44 :: D=99 :: GOSUB MVPA :: CALL COLOR(#4,11,#5,1) :: CALL PATTERN(#4,136) :: CALL BL(K,F) :: CALL COLOR(#4,1,#5,12) :: D=83 :: GOSUB MVPA
    CALL COLOR(#3,11,#5,1) :: CALL PATTERN(#3,137) :: CALL BL(K,F) :: CALL COLOR(#3,1,#5,12) :: D=67 :: GOSUB MVPA :: CALL COLOR(#2,11,#5,1) :: CALL PATTERN(#2,138)
    CALL BL(K,F) :: CALL COLOR(#2,1,#5,12) :: D=49 :: GOSUB MVPA :: CALL COLOR(#1,11,#5,1) :: CALL PATTERN(#1,139) :: CALL BL(K,F) :: CALL COLOR(#1,1,#5,12)
    GOSUB HDGHOST :: CALL PATTERN(#5,35) :: K=0 :: GOTO KYSS
MVPA:
    REPEAT
          CALL MT(5,P2,P4,P5,D,1,P8,P3,1,C) :: P3=P3+1 :: IF P3=4 THEN P3=0 :: CALL BK(F) :: FP=-FP :: IF FP<0 THEN U=Q ELSE U=Z
          IF P3=0 THEN CALL PATTERN(#1,U,#2,U,#3,U,#4,U)
    UNTIL C=1 :: CALL HCHAR(Y,X,32) :: RETURN
GAME:
     SW=100 :: IF LV<11 THEN BN=(10*LV) ELSE IF LV<20 THEN BN=100+((LV-10)*100) ELSE BN=2000
     ET,D,PP,N=0 :: P1,P2=1 :: CH=34 :: XC=INT(((P4-1)/8)+1) :: YC=INT(((P5-1)/8)+1)
     GOSUB STGH :: CALL LOCATE(#5,P5,P4,#1,G(1,5),G(1,4),#2,G(2,5),G(2,4),#3,G(3,5),G(3,4),#4,G(4,5),G(4,4))
     CALL PATTERN(#1,G(1,7),#2,G(2,7),#3,G(3,7),#4,G(4,7),#5,P8) :: I=1 :: GOSUB RNDDR :: GOSUB COLGHOST
     GOSUB STFR :: GOSUB READY :: GOSUB PLAST
RDJOY:
      F=-F
      IF JZ=1 THEN CALL JOYST(1,K,S) :: IF N<>4 AND S=4 THEN N=4 :: GOTO HNDG ELSE IF N<>2 AND S=-4 THEN N=2 :: GOTO HNDG ELSE IF N<>1 AND K=4 THEN N=1 :: GOTO HNDG ELSE IF N<>3 AND K=-4 THEN N=3 :: GOTO HNDG
      CALL KEY(0,K,S) :: IF S<>0 THEN IF K=KE THEN N=1 ELSE IF K=KS THEN N=2 ELSE IF K=KW THEN N=3 ELSE IF K=KN THEN N=4 ELSE IF K=32 THEN GOSUB PAWS ELSE N=0
HNDG:
     FOR I=1 TO 4 :: IF P4=G(I,4) OR P5=G(I,5) THEN HNHIT
GTR:
    G8=G(I,8) :: IF G8=0 THEN GDR ELSE G8,G(I,8)=G8-1 :: IF G8=0 THEN UNS ELSE IF P3=3 AND G(I,16)=2 THEN FSH
GDR:
    G13=G(I,13) :: IF LV<4 AND G13=56 AND F<0 THEN HNDNXT ELSE G9=G(I,9) :: G10=G(I,10) :: G11=G(I,11) :: ON G(I,2) GOTO GDE,GDS,GDW,GDN
GDE:
   G4=G(I,4) :: IF G4>=R(G11,G9) THEN GCHNS ELSE G(I,4)=G4+4 :: GOTO HNDEND
GDS:
   G5=G(I,5) :: IF G5>=R(G11,G9) THEN GCHEW ELSE G(I,5)=G5+4 :: GOTO HNDEND
GDW:
   G4=G(I,4) :: IF G4<=R(G11,G9) THEN GCHNS ELSE G(I,4)=G4-4 :: GOTO HNDEND
GDN:
   G5=G(I,5) :: IF G5<=R(G11,G9) THEN GCHEW ELSE G(I,5)=G5-4 :: GOTO HNDEND
GCHEW:
      G9,G(I,9)=G9+G10 :: IF G9>E(G11) THEN G(I,9)=1 :: GOTO CHRT ELSE IF G9<1 THEN G(I,9)=E(G11) :: GOTO CHRT
      IF R(G11,G9)>G(I,4) THEN G(I,2)=1 :: GOTO GDR ELSE G(I,2)=3 :: GOTO GDR
GCHNS:
      G9,G(I,9)=G9+G10 :: IF G9>E(G11) THEN G(I,9)=1 :: GOTO CHRT ELSE IF G9<1 THEN G(I,9)=E(G11) :: GOTO CHRT
      IF R(G11,G9)=0 THEN WARP ELSE IF R(G11,G9)>G(I,5) THEN G(I,2)=2 :: GOTO GDR ELSE G(I,2)=4 :: GOTO GDR
WARP:
     G9,G(I,9)=G9+G10 :: G(I,4)=R(G11,G9) :: GOTO HNDEND
CHRT:
     ON G(I,1) GOTO HOME,BUST,JAIL,ROAM
HOME:
     G14=G(I,14) :: G(I,13)=48 :: G(I,1),G(I,2)=4 :: G(I,11)=O(I) :: G(I,12)=G14 :: G(I,16)=0 :: GOSUB RNDDR :: CALL COLOR(#I,G14) :: GOSUB PLAST :: GOTO GDR
BUST:
     G(I,1)=4 :: G(I,11)=O(I) :: G(I,2)=4 :: GOSUB RNDDR :: GOTO GDR
JAIL:
     IF G(I,15)>0 THEN G(I,15)=G(I,15)-1 :: GOTO GDR
     G(I,9)=1 :: G(I,2)=3 :: G(I,1)=2 :: G(I,11)=6 :: GOTO GDR
ROAM:
     IF G13=128 THEN G(I,2)=2 :: G10,G(I,9),G(I,10),G(I,1)=1 :: G(I,11)=7 :: IF G(I,5)<65 THEN GDR ELSE G(I,2)=4 :: GOTO GDR
     IF G10>0 AND G(I,5)>R(G11,1) THEN G(I,2)=4 :: GOTO GDR ELSE IF G10>0 THEN G(I,2)=2 :: GOTO GDR
     IF G10<0 AND G(I,4)>R(G11,E(I)) THEN G(I,2)=3 :: GOTO GDR ELSE G(I,2)=1 :: GOTO GDR
HNDEND:
     G(I,7)=G13+((G(I,2)-1)*2)+G(I,3) :: G(I,3)=G(I,3)+1 :: IF G(I,3)=2 THEN G(I,3)=0
HNDNXT:
NEXT I
CHDIR:
      IF N>0 AND N<>P2 THEN GOSUB NEWDIR
      X=XC :: Y=YC :: T=0 :: P8=32+((P2-1)*4)+P3 :: P3=P3+1 :: IF P3=4 THEN P3=0
      ON P2 GOTO CHD1,CHD2,CHD3,CHD4
CHD1:
     IF D>0 THEN T=1 :: GOTO CHD7 ELSE X=XC+1 :: GOTO CHDZ
CHD2:
     IF D>0 THEN T=1 :: GOTO CHD7 ELSE Y=YC+1 :: GOTO CHDZ
CHD3:
     IF D>0 THEN T=1 :: GOTO CHD7 ELSE IF XC>1 THEN X=X-1 :: GOTO CHDZ ELSE CH=32 :: GOTO CHD5
CHD4:
     IF D>0 THEN T=1 :: GOTO CHD7 ELSE Y=YC-1
CHDZ:
     CALL GCHAR(Y,X,CH)
CHD5:
     IF CH<36 OR P4=193 THEN T=1
CHD6:
     IF T=0 THEN BLPP
CHD7:
     IF P2=1 THEN P4=P4+4 ELSE IF P2=3 THEN P4=P4-4 ELSE IF P2=2 THEN P5=P5+4 ELSE P5=P5-4
CHDC:
     D=D+4 :: IF P4<1 THEN P4=193 :: D=8 ELSE IF P4>196 THEN P4=1 :: D=8
     IF D=8 THEN D=0 ELSE BLPP
     XC=INT(((P4-1)/8)+1) :: YC=INT(((P5-1)/8)+1) :: CALL GCHAR(YC,XC,CH) :: Z=0 :: IF CH=23 THEN ETFR ELSE IF CH<=32 THEN BLPP
     CALL HCHAR(YC,XC,32) :: IF CH=33 THEN CALL CS(S1,1,5,LF,UU) :: C=C+1 :: CALL LINK("PLAY",7407) :: IF C=DT THEN NXTMZ ELSE IF C=SW THEN SW=SW+50 :: Z=1 :: GOTO RVG ELSE BLPP
     IF CH<>35 THEN BLPP ELSE CALL CS(S1,5,5,LF,UU) :: ET=0 :: GB=20 :: C=C+1 :: IF C=DT THEN NXTMZ
RVG:
     FOR J=1 TO 4 :: IF G(J,13)=128 THEN NXTGST
         IF Z=0 THEN G(J,12)=5 :: CALL COLOR(#J,5) :: G(J,13),G(J,7)=56 :: G(J,8)=A5 :: G(J,16)=1 :: GOSUB PLAST
         IF G(J,1)=4 AND G(J,12)<16 AND G(J,9)>2 AND G(J,9)<(E(G(J,11))-1) THEN GOSUB RVS
NXTGST:
     NEXT J
BLPP:
     IF P1<11 THEN P9=P9+1 :: IF P9=50 THEN GOSUB HNDFR
     PP=PP+1 :: IF PP=4 THEN CALL LINK("CHAR2",35,"00") ELSE IF PP=7 THEN PP=1 :: CALL LINK("CHAR2",35,V$)
     CALL PATTERN(#1,G(1,7),#2,G(2,7),#3,G(3,7),#4,G(4,7),#5,P8)
     CALL LOCATE(#5,P5,P4,#1,G(1,5),G(1,4),#2,G(2,5),G(2,4),#3,G(3,5),G(3,4),#4,G(4,5),G(4,4)) :: GOTO RDJOY
ETFR:
     CALL LINK("PLAY",7834) :: CALL CS(S1,BN,5,LF,UU) :: CALL HCHAR(15,13,24) :: P9=35 :: GOTO BLPP
HNDFR:
      ON P1 GOTO HF2,HF2,HF2,HF1,HF3,HF2,HF2,HF2,HF1,HF3
HF1:
    CALL HCHAR(15,13,23)
HF2:
    P1=P1+1 :: P9=0 :: RETURN
HF3:
    P1=P1+1 :: P9=0 :: CALL HCHAR(15,13,32) :: RETURN
RVS:
      IF(R(G(J,11),G(J,9))=0 OR R(G(J,11),G(J,9))=1 OR R(G(J,11),G(J,9))=193 THEN RETURN
      G(J,10)=-G(J,10) :: IF G(J,2)=1 THEN G(J,2)=3 ELSE IF G(J,2)=3 THEN G(J,2)=1 ELSE IF G(J,2)=2 THEN G(J,2)=4 ELSE G(J,2)=2
      GOSUB REVMJ :: GOTO REVMJ
REVMJ:
      G(J,9)=G(J,9)+G(J,10) :: IF G(J,9)>E(G(J,11)) THEN G(J,9)=1 ELSE IF G(J,9)=0 THEN G(J,9)=E(G(J,11))
      RETURN
NEWDIR:
       IF D>0 AND ((N=1 AND P2=3) OR (N=2 AND P2=4) OR (N=3 AND P2=1) OR (N=4 AND P2=2)) THEN P2=N :: N=0 :: D=(8-D) :: RETURN
       CALL GCHAR(YC-(N=2)+(N=4),XC-(N=1)+(N=3),CH) :: IF D=0 AND CH<36 THEN P2=N :: N=0
       RETURN
HNHIT:
      IF G(I,13)=128 THEN GTR ELSE CALL COINC(#I,#5,4,Q) :: IF Q=0 THEN GTR ELSE IF G(I,13)=48 THEN DIE ELSE IF G(I,13)=56 THEN EATS
      GOTO GTR
UNS:
    IF G(I,16)=1 THEN G(I,16)=2 :: G(I,12)=16 :: CALL COLOR(#I,16) :: G(I,8)=A6 :: GOTO GDR
    CALL COLOR(#I,G(I,14)) :: G(I,13)=48 :: ET,G(I,16)=0 :: G(I,12)=G(I,14) :: GOSUB PLAST :: GOTO GDR
FSH:
    IF G(I,12)=5 THEN Q,G(I,12)=16 ELSE Q,G(I,12)=5
    CALL COLOR(#I,Q) :: GOTO GDR
DIE:
    GOSUB SHTUP :: CALL LINK("DELAY",500) :: GOSUB ERGHOST :: GOSUB HDGHOST :: CALL LINK("PLAY",7461) :: FOR I=44 TO 47 :: CALL PATTERN(#5,I) :: CALL LINK("DELAY",130) :: NEXT I
    FOR I=140 TO 143 :: CALL PATTERN(#5,I) :: CALL LINK("DELAY",130) :: NEXT I :: GOSUB ERPAC :: CALL LOCATE(#5,200,80) :: LF=LF-1 :: CALL DL(LF) :: IF LF<1 THEN X=15 :: GOTO GAMEOVER
    GOSUB INITPAC :: CALL PATTERN(#1,48,#2,48,#3,48,#4,48) :: GOTO GAME
EATS:
    CALL LINK("PLAY",7675) :: CALL COLOR(#I,1) :: CALL PATTERN(#5,136+ET) :: ET=ET+1 :: CALL CS(S1,GB,5,LF,UU) :: GB=GB*2 :: G(I,8)=0 :: G(I,16)=3 :: G(I,12)=16
    G(I,7),G(I,13)=128 :: CALL PATTERN(#I,128) :: IF (G(I,9)>(E(G(I,11))/2) AND G(I,10)<0) OR (G(I,9)<(E(G(I,11))/2) AND G(I,10)>0) THEN J=I :: GOSUB RVS
    CALL LINK("DELAY",400) :: CALL COLOR(#I,16) :: GOSUB PLAST :: GOTO HNDNXT
NXTMZ:
      GOSUB SHTUP :: CALL PATTERN(#5,P8) :: CALL LOCATE(#5,P5,P4) :: OM=M :: IF LV>20 THEN X=15 :: GOTO GAMEOVER ELSE RZ=RZ+1 :: CALL PATTERN(#5,32) :: LV=LV+1 :: R1=20 :: IF LV<=20 THEN GOSUB STFMP
      IF RZ=2 THEN RZ=0 :: GOTO LDNXT ELSE GOSUB ERGHOST :: GOSUB HDGHOST :: P1,F=1 :: P9=0
      FOR I=1 TO 8 :: F=-F :: IF F<0 THEN CALL LINK("COLOR2",9,16,2,10,16,2) ELSE CALL LINK("COLOR2",9,OM,2,10,OM,2)
      CALL LINK("DELAY",400) :: NEXT I
CNXT:
      GOSUB ERPAC :: GOSUB STGH  :: GOSUB CLMAZE :: CALL LINK("COLOR2",9,M,2,10,M,2,1,DC,2) :: GOSUB DRMAZE :: GOTO GAME
LDNXT:
      GOSUB SHTUP :: GOSUB ERGHOST :: F=1 :: LZ,C,P9=0 :: P1=1 :: R1=30 :: IF LV>=20 THEN LZ=5
      FOR I=1 TO 8 :: F=-F :: IF F<0 THEN CALL LINK("COLOR2",9,16,2,10,16,2) ELSE CALL LINK("COLOR2",9,OM,2,10,OM,2)
      GOSUB LZLD :: NEXT I :: GOSUB ERPAC :: GOSUB HDSPRTS :: GOSUB CLMAZE :: I=5 :: R1=60 :: CALL MAGNIFY(3) :: GOSUB STCLP :: CALL PATTERN(#6,84)
      CALL LOCATE(#6,81,89) :: CALL DP(9,11,"ACT "&STR$(LV/2)) :: R1=30 :: CALL COLOR(#6,16) :: GOSUB LZLD :: GOSUB LZLD :: CALL PATTERN(#6,88) :: CALL LINK("PLAY",8060)
      GOSUB LZLD :: GOSUB LZLD :: CALL COLOR(#6,1) :: CALL HCHAR(9,11,32,6) :: GOSUB HDSPRTS :: GOSUB ERGHOST :: GOSUB ERPAC :: CALL MAGNIFY(1)
      R1=30 :: GOSUB LZLD :: GOSUB LZLD :: FP=1 :: CALL MOTION(#1,0,0,#2,0,0,#3,0,0,#4,0,0,#5,0,0) :: IF LV<20 THEN CALL LINK("PLAY",6452)
      ON LV/2 GOSUB SN1,SN2,SN3,SN4,SN5,SN6,SN7,SN8,SN9,SN10 :: GOSUB RDRST :: CALL HCHAR(9,13,32) :: CALL HCHAR(11,X,32)
      GOSUB ERPAC :: GOSUB ERGHOST :: IF LV<20 THEN CNXT ELSE X=11 :: GOTO GAMEOVER
SN1:
    CALL LINK("CHAR2",38,V$) :: PR=1 :: T=89 :: GOSUB SNPRE :: D=7 :: H,J=57 :: Q=1 :: GOSUB SNRST :: CALL HCHAR(12,8,32) :: PR=2
    K,Q,D=5 :: N=32 :: Y=56 :: PD,GD=1 :: J,H=193 :: GOSUB SNRST :: CALL COLOR(#1,1) :: R1=90 :: RETURN
SN2:
    PR=4 :: Q,T=129 :: GOSUB SNPRE :: H,J=6 :: D=7 :: GOSUB SNRST :: Z=1 :: K=2 :: GOSUB SNRST :: CALL COLOR(#S,1) :: PY,GY=41 :: N=32 :: Y=48
    K,D,PX,X,PD,GD,H=1 :: Z=12 :: J=48 :: R1=30 :: GOSUB LZLD :: GOSUB LZLD :: GOSUB SNSTA :: D=7 :: H,J=193 :: GOSUB SNRST
    Z=1 :: K=2 :: GOSUB SNRST :: GOSUB SNER :: J,H=86 :: PY,GY=92 :: GD,PD=3 :: Y=48 :: D=7 :: GOSUB SNSTA :: X=12
SNEX:
    R1=60 :: GOSUB LZLD :: CALL HCHAR(11,X,47) :: RETURN
SN3:
    Q,PR=4 :: T=129 :: GOSUB SNSTB :: PY=41 :: K,H=5 :: D=7 :: J=193 :: PX,PD=1 :: N=32 :: GOSUB SNSTA :: GOSUB SNER :: GOSUB SNSTB :: D=7 :: GY=41 :: J=5 :: H=193 :: X,GD=1
    Y=48 :: GOSUB SNSTA :: GOSUB SNER :: K,H=83 :: GD,PD,Z=1 :: D=7 :: J=256 :: Y=48 :: GY=92 :: GOSUB SNSTA :: X=12 :: GOTO SNEX
SN4:
    Q=2 :: T=92 :: GOSUB SNSTB :: J=86 :: PR,X=1 :: GOSUB SNSTA :: CALL PATTERN(#5,42) :: CALL LOCATE(#1,92,1,#2,92,172,#3,1,86,#4,184,86)
    CALL COLOR(#1,7,#2,14,#3,8,#4,11) :: K,S=1 :: Q=10 :: H=30 :: XX=30 :: GOSUB SNAMV :: X=12 :: GOTO SNEX
SN5:
    CALL LOCATE(#1,92,30,#2,92,142,#3,34,86,#4,150,86,#5,92,86) :: CALL PATTERN(#5,43) :: K,S=1 :: Q=10 :: H=83
    CALL COLOR(#1,7,#2,14,#3,8,#4,11,#5,12) :: GOSUB SNAMV :: CALL COLOR(#5,1) :: R1=30 :: K=-1 :: S=2 :: H=136 :: GOSUB LZLD :: GOSUB SNAMV :: R1=120 :: RETURN
SN6:
    GY=100 :: X=60 :: Z,W,D=2 :: Y=116 :: GOSUB SNSTP :: Q,PR=2 :: T=92 :: GOSUB SNPRE :: D=7 :: H,J=62 :: GOSUB SNRST :: CALL PATTERN(#5,35) :: CALL LINK("DELAY",1000)
    CALL LINK("FREEZE") :: CALL MOTION(#5,-10,0,#3,-10,0) :: CALL LINK("THAW") :: W=3 :: GOSUB SNGUP :: CALL COLOR(#3,1,#5,1) :: X=15 :: GOTO SNEX
SN7:
    GY=97 :: X=101 :: N,Y=116 :: W,Z=2 :: S=1 :: GOSUB SNDRP :: FOR X=102 TO 109 :: CALL LOCATE(#3,97,X) :: CALL LINK("DELAY",100) :: NEXT X
    CALL LINK("FREEZE") :: CALL MOTION(#1,20,0) :: H=200 :: CALL LINK("THAW")
SNB7:
    CALL POSITION(#1,GY,X) :: IF GY<H THEN SNB7
    IF W=1 THEN CALL LOCATE(#2,89,X-8,#1,89,X)
    CALL LINK("FREEZE") :: CALL MOTION(#1,0,0,#2,0,0) :: R1=60 :: RETURN
SN8:
    Z=15 :: Y=112 :: N=113 :: GY=20 :: X=96 :: W=1 :: S=3 :: GOSUB SNDRP
    CALL LINK("FREEZE") :: CALL MOTION(#1,20,0,#2,20,0) :: H=88 :: CALL LOCATE(#4,200,72) :: CALL LINK("THAW") :: GOTO SNB7
SN9:
    T=89 :: GOSUB SNSTB :: K,GD,X=1 :: Q,Y=48 :: PR=1 :: D=7 :: H,J=105 :: GOSUB SNSTA :: CALL HCHAR(9,13,217) :: R1=150 :: X=12 :: RETURN
SN10:
     R1=1 :: GOSUB RDRST :: CALL LINK("WINDOW",1,1,24,25) :: FOR I=1 TO 36 :: IF I<25 THEN CALL DP(24,1,Z$(I)) ELSE CALL DP(24,1," ")
     CALL LINK("DELAY",500) :: CALL LINK("SCRLUP") :: CALL DP(24,1," ") :: CALL LINK("DELAY",500) :: CALL LINK("SCRLUP") :: NEXT I
     CALL DP(11,10,"THE END") :: CALL LINK("DELAY",3000) :: CALL HCHAR(11,5,32,15) :: X=12 :: RETURN
SNDRP:
      Q,D=9 :: GOSUB SNSTP :: PR=2 :: T=89 :: GOSUB SNBEG :: D=7 :: H,J=54 :: GOSUB SNRST :: R1=30 :: GOSUB LZLD
      CALL PATTERN(#5,35) :: GOSUB LZLD :: CALL PATTERN(#4,125) :: GOSUB LZLD :: RETURN
SNGUP:
    CALL POSITION(#W,GY,X) :: IF GY<=8 THEN CALL LINK("FREEZE") :: CALL MOTION(#1,0,0,#2,0,0,#3,0,0,#4,0,0,#5,0,0) :: RETURN ELSE SNGUP
SNSTP:
      IF LV>13 THEN CALL LOCATE(#4,89,57)
      CALL LOCATE(#(W+1),GY,X,#W,GY,X+8) :: CALL PATTERN(#(W+1),Y,#W,N,#4,124) :: CALL COLOR(#(W+1),15,#W,Z,#4,D) :: RETURN
SNAMV:
      CALL LINK("FREEZE") :: CALL MOTION(#1,0,K*Q,#2,0,K*-Q,#3,K*Q,0,#4,K*-Q,0) :: CALL LINK("THAW")
SNHLT:
      CALL POSITION(#S,GY,X) :: IF X>=H THEN CALL LINK("FREEZE") :: CALL MOTION(#1,0,0,#2,0,0,#3,0,0,#4,0,0) :: RETURN ELSE SNHLT
SNER:
     CALL COLOR(#S,1,#5,1) :: R1=60 :: GOSUB LZLD :: RETURN
SNPRE:
      S=1
SNBEG:
      H,X,PX=193 :: PY,GY=T :: K,D=1 :: Z=12 :: J=145 :: GD,PD=3 :: N=40 :: Y=48 :: GOSUB SNVL :: GOSUB SNLC :: GOTO SNCL
SNRST:
      PX=P4 :: X=G(S,4) :: GOSUB SNVL :: GOTO SNCL
SNSTA:
      GOSUB SNVL :: GOSUB SNLC :: GOTO SNCL
SNSTB:
      H,X,PX=193 :: PY,GY=T :: K,S,D=1 :: Z=12 :: J=145 :: GD,PD=3 :: N=40 :: Y=48 :: RETURN
SNVL:
     G(S,4)=X :: P4=PX :: G(S,5)=GY :: P5=PY :: P2=PD :: G(S,2)=GD :: P8=N :: G(S,7)=Y :: G(S,14)=D :: P7=Z :: RETURN
SNLC:
     CALL LOCATE(#S,G(S,5),G(S,4),#5,P5,P4) :: RETURN
SNCL:
     CALL COLOR(#S,G(S,14),#5,P7)
SNMV:
      REPEAT
           CALL MT(5,P2,P4,P5,J,PR,P8,P3,1,PRT) :: P3=P3+1 :: IF P3=4 THEN P3=0 :: FP=-FP :: IF FP<0 AND Q<2 THEN CALL HCHAR(12,8,38) ELSE IF Q<2 THEN CALL HCHAR(12,8,32)
           CALL MT(S,G(S,2),G(S,4),G(S,5),H,PR,G(S,7),G(S,3),1,GRT) :: IF P3=0 THEN G(S,3)=G(S,3)+1 :: IF G(S,3)>1 THEN G(S,3)=0
           IF K=1 THEN I=PRT ELSE I=GRT
      UNTIL I=1
RETURN
GAMEOVER:
    GOSUB ERGHOST :: GOSUB ERPAC :: CALL DP(X,9,Z$(39)) :: GOSUB CKSCR :: IF Q>0 THEN CALL GN(B$,X) :: GOSUB UPDSCO
RETRY:
    FOR I=1 TO 200 :: IF I=1 THEN CALL DP(X,9,Z$(39)) ELSE IF I=100 THEN CALL HCHAR(X,9,32,9)
        CALL KEY(0,K,S) :: IF S<>0 THEN GOTO FINISH
    NEXT I :: GOTO RETRY
CLOS1:
      CLOSE #1 :: CLOSE #2 :: CLOSE #3 :: RETURN
FINISH:
       GOSUB CLOS1 :: GOSUB WRTSCO :: W=1 :: CALL CLEAR :: CALL DP(11,12,Z$(57)) :: I=0 :: GOSUB OPEN2 :: GOTO TOP
HDGHOST:
    CALL LOCATE(#1,256,80,#2,256,80,#3,256,80,#4,256,80) :: RETURN
STFR:
     CALL LINK("COLOR2",-1,A4,2) :: CALL LINK("CHPAT2",LV-1,B$) :: CALL LINK("CHAR2",23,B$)
     CALL LINK("CHPAT2",127+LV,B$) :: CALL LINK("CHAR2",24,B$) :: CALL HCHAR(A3,A2,A1) :: RETURN
LDCHR:
      FOR I=0 TO J :: CALL LINK("CHPAT2",X+I,B$) :: CALL CHAR(Y+I,B$) :: NEXT I :: RETURN
CLCHR:
      FOR I=0 TO J :: CALL CHAR(Y+I,"0") :: NEXT I :: RETURN
STCLP:
      J=3 :: Y=84 :: X=180 :: GOSUB LDCHR :: Y=88 :: X=28 :: GOTO LDCHR
RDLEV:
    R1=1 :: LZ=0
RDRST:
      REPEAT
            GOSUB LZLD
      UNTIL LZ>=29
      RETURN
LZLD:
     LZ=LZ+1 :: IF LZ>29 THEN CALL LINK("DELAY",R1*17) :: RETURN
     IF LZ>5 THEN RDMZE
     ON LZ GOTO RDLV,RDRTE,RDRTE,RDRTE,RDRTE
RDMZE:
      CALL LOAD(-1,R1) :: INPUT #1:Z$(LZ-5),Z$(LZ-4),Z$(LZ-3),Z$(LZ-2) :: CALL LINK("SYNC") :: LZ=LZ+3 :: RETURN
RDLV:
     CALL LOAD(-1,R1) :: INPUT #3:DC,M,DT :: CALL LINK("SYNC") :: RETURN
RDRTE:
      II=LZ-1 :: CALL LOAD(-1,R1) :: INPUT #3:E(II) :: FOR J=1 TO 25 STEP 12
      INPUT #3:R(II,J),R(II,J+1),R(II,J+2),R(II,J+3),R(II,J+4),R(II,J+5),R(II,J+6),R(II,J+7),R(II,J+8),R(II,J+9),R(II,J+10),R(II,J+11)
      NEXT J :: IF E(II)>36 THEN FOR J=37 TO E(II) :: INPUT #3:R(II,J) :: NEXT J
      CALL LINK("SYNC") :: RETURN
STFMP:
      CALL LOAD(-1,R1) :: INPUT #2:A1,A2,A3,A4,A5,A6 :: INPUT #2:A7 :: CALL LINK("SYNC") :: RETURN
RDGFX:
    FOR I=0 TO 220 STEP 4 :: INPUT #2:B$ :: CALL LINK("CHAR2",I,B$) :: NEXT I :: FOR I=32 TO 140 STEP 4 :: INPUT #2:B$ :: CALL CHAR(I,B$) :: NEXT I :: RETURN
RDTXT:
      B$="" :: FOR I=25 TO 57 :: INPUT #3:B$ :: Z$(I)=B$ :: NEXT I :: I=0 :: RETURN
RDSS:
    FOR I=1 TO 10 :: INPUT #1:N$(I) :: INPUT #1:B(I) :: NEXT I :: RETURN
RDXGFX:
       INPUT #2:B$ :: CALL CHAR(84,B$) :: INPUT #2:B$ :: CALL CHAR(88,B$) :: RETURN
PAWS:
     GOSUB SHTUP :: CALL DP(12,11,"PAUSE") :: CALL LINK("DELAY",500)
PWS2:
     CALL KEY(0,K2,S2) :: IF S2<=0 THEN PWS2 ELSE CALL HCHAR(12,11,32,5) :: GOSUB PLAST :: RETURN
RNDDR:
      G(I,2)=4 :: CALL LINK("IRND",2,Q) :: IF Q=1 THEN G(I,9),G(I,10)=1 ELSE G(I,10)=-1 :: G(I,9)=E(G(I,11))-1
      RETURN
UPDSCO:
       I=1 :: IF Q=1 THEN CALL CS(S1,0,2,LF,I) ELSE IF Q=10 THEN UPDSC1
       FOR I=10 TO Q+1 STEP -1 :: IF I>1 THEN B(I)=B(I-1) :: N$(I)=N$(I-1)
       NEXT I
UPDSC1:
       B(Q)=S1 :: N$(Q)=B$ :: RETURN
WRTSCO:
       OPEN #1:A$&".PS",OUTPUT :: FOR I=1 TO 10 :: PRINT #1:N$(I) :: PRINT #1:B(I) :: NEXT I :: CLOSE #1 :: RETURN
CKSCR:
    Q=0 :: FOR I=1 TO 10 :: IF S1>B(I) THEN Q=I :: RETURN
    NEXT I :: RETURN
SHTUP:
      LS=0 :: CALL LINK("PLAY",7395) :: CALL LINK("PLAY",8047) :: RETURN
PLAST:
    G1=G(1,13) :: NS=7072 :: IF C>99 THEN NS=7149
    IF G1=128 OR G(2,13)=128 OR G(3,13)=128 OR G(4,13)=128 THEN NS=7225 ELSE IF G1=56 OR G(2,13)=56 OR G(3,13)=56 OR G(4,13)=56 THEN NS=7324
    IF LS<>NS THEN LS=NS :: CALL LINK("PLAY",LS)
RETURN
SUB CS(F,V,O,L,W) :: F=F+V :: S$=STR$(F) :: IF W=0 AND F>1999 THEN CALL LINK("PLAY",7883) :: L=L+1 :: W=1 :: CALL DL(L)
    CALL LINK("DISPLY",O,26+(6-LEN(S$)),S$) :: SUBEND
SUB DL(L) :: CALL HCHAR(7,26,32,7) :: IF L>1 THEN CALL HCHAR(7,33-(L-1),162,L-1)
    SUBEND
SUB BL(K,F) :: FOR J=1 TO 500 :: K=K+1 :: IF K>=100 THEN CALL BK(F) :: K=1
    NEXT J :: SUBEND
SUB BK(F) :: F=-F :: IF F<0 THEN CALL LINK("CHAR2",34,"0000183C3C18000000183C7E7E3C18") ELSE CALL LINK("CHAR2",34,"00183C7E7E3C18000000183C3C18")
SUBEND
SUB SI(R,C,O,U,H,T$,S$,V,K,F)
    CALL LOCATE(#O,R,C) :: CALL PATTERN(#O,H) :: CALL COLOR(#O,U) :: CALL BL(K,F) :: CALL LINK("DISPLY",V,9,T$) :: CALL BL(K,F) :: CALL LINK("DISPLY",V,20,S$) :: CALL BL(K,F) :: SUBEND
SUB GN(W$,V)
   CALL LINK("COLOR2",2,16,1) :: CALL LINK("DISPLY",18,27,"ENTER") :: CALL LINK("DISPLY",19,27,"NAME:") :: C=0 :: W$="" :: T=0 :: X=28 :: CALL HCHAR(20,X+C,33)
GTLP:
     CALL KEY(0,K,S) :: T=T+1 :: IF T=25 OR T=75 THEN CALL HCHAR(20,X+C,32) ELSE IF (T=50 OR T=100) AND C<3 THEN CALL HCHAR(20,X+C,33)
     IF T=50 AND THEN CALL HCHAR(V,9,32,9) ELSE IF T=100 THEN CALL LINK("DISPLY",V,9,"GAME OVER") :: T=0
     IF S=0 OR S=-1 THEN GTLP ELSE IF K=1 AND C>0 THEN DNNM
     IF K=8 AND C>0 THEN CALL HCHAR(20,X+C,32) :: C=C-1 :: W$=SEG$(W$,1,C) :: GOTO GTLP
     IF K<32 OR K>92 THEN GTLP
     CALL HCHAR(20,X+C,K) :: W$=W$&CHR$(K) :: IF C<2 THEN C=C+1 :: GOTO GTLP
DNNM:
    CALL LINK("DELAY",400) :: FOR C=15 TO 20 :: CALL HCHAR(C,26,32,7) :: NEXT C :: CALL LINK("COLOR2",2,12,1) :: SUBEND
SUB MT(S,D,X,Y,T,P,C,F,M,R) :: R=0 :: ON D GOTO EAS,STH,WES,NOR
EAS:
    IF X>=T THEN R=1 :: GOTO MVN2
    X=X+P :: IF X>=T THEN R=1
    GOTO MVND
STH:
    IF Y>T THEN R=1 :: GOTO MVN2
    Y=Y+P :: IF Y>T THEN R=1
    GOTO MVND
WES:
    IF X<=T THEN R=1 :: GOTO MVN2
    X=X-P :: IF X<=T THEN R=1
    GOTO MVND
NOR:
    IF Y<=T THEN R=1 :: GOTO MVN2
    Y=Y-P :: IF Y<=T THEN R=1
MVND:
     CALL LOCATE(#S,Y,X)
MVN2:
     CALL PATTERN(#S,C+(F*M)) :: SUBEND
SUB DP(Y,X,T$)
    CALL LINK("DISPLY",Y,X,T$) :: SUBEND
